/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./test/mmenu.module.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./test/addons/autoheight/_options.js":
/*!********************************************!*\
  !*** ./test/addons/autoheight/_options.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst opts = {\n    height: 'default' // 'default/highest/auto'\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (opts);\n\n\n//# sourceURL=webpack:///./test/addons/autoheight/_options.js?");

/***/ }),

/***/ "./test/addons/autoheight/mmenu.autoheight.js":
/*!****************************************************!*\
  !*** ./test/addons/autoheight/mmenu.autoheight.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_options */ \"./test/addons/autoheight/_options.js\");\n\n\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.autoHeight = _options__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    var options = this.opts.autoHeight;\n    //\tExtend shorthand options\n    if (typeof options == 'boolean' && options) {\n        options = {\n            height: 'auto'\n        };\n    }\n    if (typeof options == 'string') {\n        options = {\n            height: options\n        };\n    }\n    if (typeof options != 'object') {\n        options = {};\n    }\n    //\t/Extend shorthand options\n    this.opts.autoHeight = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].extend(options, _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.autoHeight);\n    if (options.height != 'auto' && options.height != 'highest') {\n        return;\n    }\n    const setHeight = (() => {\n        const getCurrent = () => {\n            var panel = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.pnls, '.mm-panel_opened')[0];\n            if (panel) {\n                panel = measurablePanel(panel);\n            }\n            //\tFallback, just to be sure we have a panel.\n            if (!panel) {\n                panel = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.pnls, '.mm-panel')[0];\n            }\n            return panel.offsetHeight;\n        };\n        const getHighest = () => {\n            var highest = 0;\n            _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.pnls, '.mm-panel')\n                .forEach((panel) => {\n                panel = measurablePanel(panel);\n                highest = Math.max(highest, panel.offsetHeight);\n            });\n            return highest;\n        };\n        const measurablePanel = (panel) => {\n            //\tIf it's a vertically expanding panel...\n            if (panel.parentElement.matches('.mm-listitem_vertical')) {\n                //\t...find the first parent panel that isn't.\n                panel = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.parents(panel, '.mm-panel')\n                    .filter(panel => !panel.parentElement.matches('.mm-listitem_vertical'))[0];\n            }\n            return panel;\n        };\n        return () => {\n            if (this.opts.offCanvas && !this.vars.opened) {\n                return;\n            }\n            var style = window.getComputedStyle(this.node.pnls);\n            var _top = Math.max(parseInt(style.top, 10), 0) || 0, _bot = Math.max(parseInt(style.bottom, 10), 0) || 0, _hgh = 0;\n            //\tThe \"measuring\" classname undoes some CSS to be able to measure the height.\n            this.node.menu.classList.add('mm-menu_autoheight-measuring');\n            //\tMeasure the height.\n            if (options.height == 'auto') {\n                _hgh = getCurrent();\n            }\n            else if (options.height == 'highest') {\n                _hgh = getHighest();\n            }\n            //\tSet the height.\n            this.node.menu.style.height = (_hgh + _top + _bot) + 'px';\n            //\tRemove the \"measuring\" classname.\n            this.node.menu.classList.remove('mm-menu_autoheight-measuring');\n        };\n    })();\n    //\tAdd the autoheight class to the menu.\n    this.bind('initMenu:after', () => {\n        this.node.menu.classList.add('mm-menu_autoheight');\n    });\n    if (this.opts.offCanvas) {\n        //\tMeasure the height when opening the off-canvas menu.\n        this.bind('open:start', setHeight);\n    }\n    if (options.height == 'highest') {\n        //\tMeasure the height when initiating panels.\n        this.bind('initPanels:after', setHeight);\n    }\n    if (options.height == 'auto') {\n        //\tMeasure the height when updating listviews.\n        this.bind('updateListview', setHeight);\n        //\tMeasure the height when opening a panel.\n        this.bind('openPanel:start', setHeight);\n        //\tthis.bind( 'closePanel', setHeight );\t// TODO: test if this is really needed\n    }\n});\n;\n\n\n//# sourceURL=webpack:///./test/addons/autoheight/mmenu.autoheight.js?");

/***/ }),

/***/ "./test/addons/backbutton/_options.js":
/*!********************************************!*\
  !*** ./test/addons/backbutton/_options.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst options = {\n    close: false,\n    open: false\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (options);\n\n\n//# sourceURL=webpack:///./test/addons/backbutton/_options.js?");

/***/ }),

/***/ "./test/addons/backbutton/mmenu.backbutton.js":
/*!****************************************************!*\
  !*** ./test/addons/backbutton/mmenu.backbutton.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_options */ \"./test/addons/backbutton/_options.js\");\n\n\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.backButton = _options__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    if (!this.opts.offCanvas) {\n        return;\n    }\n    var options = this.opts.backButton;\n    //\tExtend shorthand options\n    if (typeof options == 'boolean') {\n        options = {\n            close: options\n        };\n    }\n    if (typeof options != 'object') {\n        options = {};\n    }\n    //\t/Extend shorthand options\n    this.opts.backButton = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].extend(options, _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.backButton);\n    var _menu = '#' + this.node.menu.id;\n    //\tClose menu\n    if (options.close) {\n        var states = [];\n        const setStates = () => {\n            states = [_menu];\n            _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.pnls, '.mm-panel_opened, .mm-panel_opened-parent')\n                .forEach((panel) => {\n                states.push('#' + panel.id);\n            });\n        };\n        this.bind('open:finish', () => {\n            history.pushState(null, document.title, _menu);\n        });\n        this.bind('open:finish', setStates);\n        this.bind('openPanel:finish', setStates);\n        this.bind('close:finish', () => {\n            states = [];\n            history.back();\n            history.pushState(null, document.title, location.pathname + location.search);\n        });\n        window.addEventListener('popstate', (evnt) => {\n            if (this.vars.opened) {\n                if (states.length) {\n                    states = states.slice(0, -1);\n                    var hash = states[states.length - 1];\n                    if (hash == _menu) {\n                        this.close();\n                    }\n                    else {\n                        this.openPanel(this.node.menu.querySelector(hash));\n                        history.pushState(null, document.title, _menu);\n                    }\n                }\n            }\n        });\n    }\n    if (options.open) {\n        window.addEventListener('popstate', (evnt) => {\n            if (!this.vars.opened && location.hash == _menu) {\n                this.open();\n            }\n        });\n    }\n});\n;\n\n\n//# sourceURL=webpack:///./test/addons/backbutton/mmenu.backbutton.js?");

/***/ }),

/***/ "./test/addons/columns/_options.js":
/*!*****************************************!*\
  !*** ./test/addons/columns/_options.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst options = {\n    add: false,\n    visible: {\n        min: 1,\n        max: 3\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (options);\n\n\n//# sourceURL=webpack:///./test/addons/columns/_options.js?");

/***/ }),

/***/ "./test/addons/columns/mmenu.columns.js":
/*!**********************************************!*\
  !*** ./test/addons/columns/mmenu.columns.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_options */ \"./test/addons/columns/_options.js\");\n\n\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.columns = _options__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    var options = this.opts.columns;\n    //\tExtend shorthand options\n    if (typeof options == 'boolean') {\n        options = {\n            add: options\n        };\n    }\n    if (typeof options == 'number') {\n        options = {\n            add: true,\n            visible: options\n        };\n    }\n    if (typeof options != 'object') {\n        options = {};\n    }\n    if (typeof options.visible == 'number') {\n        options.visible = {\n            min: options.visible,\n            max: options.visible\n        };\n    }\n    //\t/Extend shorthand options\n    this.opts.columns = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].extend(options, _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.columns);\n    //\tAdd the columns\n    if (options.add) {\n        options.visible.min = Math.max(1, Math.min(6, options.visible.min));\n        options.visible.max = Math.max(options.visible.min, Math.min(6, options.visible.max));\n        var colm = '', colp = '';\n        for (var i = 0; i <= options.visible.max; i++) {\n            colm += ' mm-menu_columns-' + i;\n            colp += ' mm-panel_columns-' + i;\n        }\n        if (colm.length) {\n            colm = colm.slice(1);\n            colp = colp.slice(1);\n        }\n        var rmvc = colp + ' mm-panel_opened mm-panel_opened-parent mm-panel_highest';\n        //\tClose all later opened panels\n        this.bind('openPanel:before', (panel) => {\n            var parent;\n            if (panel) {\n                parent = panel['mmParent'];\n            }\n            if (!parent) {\n                return;\n            }\n            parent = parent.closest('.mm-panel');\n            if (!parent) {\n                return;\n            }\n            var classname = parent.className;\n            if (!classname.length) {\n                return;\n            }\n            classname = classname.split('mm-panel_columns-')[1];\n            if (!classname) {\n                return;\n            }\n            var colnr = parseInt(classname.split(' ')[0], 10) + 1;\n            while (colnr > 0) {\n                panel = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.pnls, '.mm-panel_columns-' + colnr)[0];\n                if (panel) {\n                    colnr++;\n                    panel.classList.remove(rmvc);\n                    panel.classList.add('mm-hidden');\n                }\n                else {\n                    colnr = -1;\n                    break;\n                }\n            }\n        });\n        this.bind('openPanel:start', (panel) => {\n            var columns = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.pnls, '.mm-panel_opened-parent').length;\n            if (!panel.matches('.mm-panel_opened-parent')) {\n                columns++;\n            }\n            columns = Math.min(options.visible.max, Math.max(options.visible.min, columns));\n            this.node.menu.classList.remove(...colm.split(' '));\n            this.node.menu.classList.add('mm-menu_columns-' + columns);\n            var panels = [];\n            _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.pnls, '.mm-panel')\n                .forEach((panel) => {\n                panel.classList.remove(...colp.split(' '));\n                if (panel.matches('.mm-panel_opened-parent')) {\n                    panels.push(panel);\n                }\n            });\n            panels.push(panel);\n            panels.slice(-options.visible.max)\n                .forEach((panel, p) => {\n                panel.classList.add('mm-panel_columns-' + p);\n            });\n        });\n    }\n});\n;\n\n\n//# sourceURL=webpack:///./test/addons/columns/mmenu.columns.js?");

/***/ }),

/***/ "./test/addons/counters/_options.js":
/*!******************************************!*\
  !*** ./test/addons/counters/_options.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\tOptions for the counters add-on. */\nconst options = {\n    add: false,\n    addTo: 'panels',\n    count: false\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (options);\n\n\n//# sourceURL=webpack:///./test/addons/counters/_options.js?");

/***/ }),

/***/ "./test/addons/counters/mmenu.counters.js":
/*!************************************************!*\
  !*** ./test/addons/counters/mmenu.counters.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_options */ \"./test/addons/counters/_options.js\");\n\n\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.counters = _options__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].configs.classNames.counters = {\n    counter: 'Counter'\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    var options = this.opts.counters;\n    //\tExtend shorthand options\n    if (typeof options == 'boolean') {\n        options = {\n            add: options,\n            count: options\n        };\n    }\n    if (typeof options != 'object') {\n        options = {};\n    }\n    if (options.addTo == 'panels') {\n        options.addTo = '.mm-panel';\n    }\n    //\t/Extend shorthand options\n    this.opts.counters = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].extend(options, _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.counters);\n    //\tRefactor counter class\n    this.bind('initListview:after', (panel) => {\n        var cntrclss = this.conf.classNames.counters.counter, counters = panel.querySelectorAll('.' + cntrclss);\n        counters.forEach((counter) => {\n            _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].refactorClass(counter, cntrclss, 'mm-counter');\n        });\n    });\n    //\tAdd the counters after a listview is initiated.\n    if (options.add) {\n        this.bind('initListview:after', (panel) => {\n            if (!panel.matches(options.addTo)) {\n                return;\n            }\n            var parent = panel['mmParent'];\n            if (parent) {\n                //\tCheck if no counter already excists.\n                if (!parent.querySelector('.mm-counter')) {\n                    let counter = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('span.mm-counter');\n                    let btn = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(parent, '.mm-btn')[0];\n                    if (btn) {\n                        btn.prepend(counter);\n                    }\n                }\n            }\n        });\n    }\n    if (options.count) {\n        function count(panel) {\n            var panels = panel ? [panel] : _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.pnls, '.mm-panel');\n            panels.forEach((panel) => {\n                var parent = panel['mmParent'];\n                if (!parent) {\n                    return;\n                }\n                var counter = parent.querySelector('.mm-counter');\n                if (!counter) {\n                    return;\n                }\n                var listitems = [];\n                _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(panel, '.mm-listview')\n                    .forEach((listview) => {\n                    listitems.push(..._core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(listview));\n                });\n                counter.innerHTML = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterListItems(listitems).length.toString();\n            });\n        }\n        ;\n        this.bind('initListview:after', count);\n        this.bind('updateListview', count);\n    }\n});\n;\n\n\n//# sourceURL=webpack:///./test/addons/counters/mmenu.counters.js?");

/***/ }),

/***/ "./test/addons/dividers/_options.js":
/*!******************************************!*\
  !*** ./test/addons/dividers/_options.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst options = {\n    add: false,\n    addTo: 'panels',\n    fixed: false,\n    type: null\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (options);\n\n\n//# sourceURL=webpack:///./test/addons/dividers/_options.js?");

/***/ }),

/***/ "./test/addons/dividers/mmenu.dividers.js":
/*!************************************************!*\
  !*** ./test/addons/dividers/mmenu.dividers.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_options */ \"./test/addons/dividers/_options.js\");\n\n\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.dividers = _options__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    var options = this.opts.dividers;\n    //\tExtend shorthand options\n    if (typeof options == 'boolean') {\n        options = {\n            add: options,\n            fixed: options\n        };\n    }\n    if (typeof options != 'object') {\n        options = {};\n    }\n    if (options.addTo == 'panels') {\n        options.addTo = '.mm-panel';\n    }\n    //\t/Extend shorthand options\n    this.opts.dividers = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].extend(options, _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.dividers);\n    //\tAdd classname to the menu to specify the type of the dividers\n    if (options.type) {\n        this.bind('initMenu:after', () => {\n            this.node.menu.classList.add('mm-menu_dividers-' + options.type);\n        });\n    }\n    //\tAdd dividers\n    if (options.add) {\n        this.bind('initListview:after', (panel) => {\n            if (!panel.matches(options.addTo)) {\n                return;\n            }\n            _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(panel, '.mm-listitem_divider')\n                .forEach((divider) => {\n                divider.remove();\n            });\n            _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(panel, '.mm-listview')\n                .forEach((listview) => {\n                var lastletter = '', listitems = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(listview);\n                _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterListItems(listitems)\n                    .forEach((listitem) => {\n                    let letter = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(listitem, '.mm-listitem__text')[0]\n                        .textContent.trim().toLowerCase()[0];\n                    if (letter.length && letter != lastletter) {\n                        lastletter = letter;\n                        let divider = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('li.mm-listitem.mm-listitem_divider');\n                        divider.textContent = letter;\n                        listview.insertBefore(divider, listitem);\n                    }\n                });\n            });\n        });\n    }\n    //\tFixed dividers\n    if (options.fixed) {\n        //\tAdd the fixed divider.\n        this.bind('initPanels:after', (panels) => {\n            if (!this.node.fixeddivider) {\n                let listview = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('ul.mm-listview.mm-listview_fixeddivider'), listitem = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('li.mm-listitem.mm-listitem_divider');\n                listview.append(listitem);\n                this.node.pnls.append(listview);\n                this.node.fixeddivider = listitem;\n            }\n        });\n        //\tSet the text for the fixed divider.\n        const setValue = () => {\n            if (this.opts.offCanvas && !this.vars.opened) {\n                return;\n            }\n            var panel = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.pnls, '.mm-panel_opened')[0];\n            if (!panel || panel.matches('.mm-hidden')) {\n                return;\n            }\n            var scrl = panel.scrollTop, text = '';\n            _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(panel, '.mm-listitem_divider')\n                .forEach((divider) => {\n                if (!divider.matches('.mm-hidden')) {\n                    if (divider.offsetTop + scrl < scrl + 1) {\n                        text = divider.innerHTML;\n                    }\n                }\n            });\n            this.node.fixeddivider.innerHTML = text;\n            this.node.pnls.classList[text.length ? 'add' : 'remove']('mm-panels_dividers');\n        };\n        //\tSet correct value when \n        //\t\t1) opening the menu,\n        //\t\t2) opening a panel,\n        //\t\t3) after updating listviews and\n        //\t\t4) after scrolling a panel\n        this.bind('open:start', setValue); // 1\n        this.bind('openPanel:start', setValue); // 2\n        this.bind('updateListview', setValue); // 3\n        this.bind('initPanel:after', (panel) => {\n            panel.addEventListener('scroll', () => {\n                if (panel.matches('.mm-panel_opened')) {\n                    setValue.call(this, panel);\n                }\n            }, { passive: true });\n        });\n    }\n});\n;\n\n\n//# sourceURL=webpack:///./test/addons/dividers/mmenu.dividers.js?");

/***/ }),

/***/ "./test/addons/drag/_configs.js":
/*!**************************************!*\
  !*** ./test/addons/drag/_configs.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst configs = {\n    menu: {\n        width: {\n            perc: 0.8,\n            min: 140,\n            max: 440\n        },\n        height: {\n            perc: 0.8,\n            min: 140,\n            max: 880\n        }\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (configs);\n\n\n//# sourceURL=webpack:///./test/addons/drag/_configs.js?");

/***/ }),

/***/ "./test/addons/drag/_options.js":
/*!**************************************!*\
  !*** ./test/addons/drag/_options.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst options = {\n    menu: {\n        open: false,\n        node: null,\n        maxStartPos: 100,\n        threshold: 50\n    },\n    panels: {\n        close: false\n    },\n    vendors: {\n        hammer: {}\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (options);\n\n\n//# sourceURL=webpack:///./test/addons/drag/_options.js?");

/***/ }),

/***/ "./test/addons/drag/mmenu.drag.js":
/*!****************************************!*\
  !*** ./test/addons/drag/mmenu.drag.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_options */ \"./test/addons/drag/_options.js\");\n/* harmony import */ var _configs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_configs */ \"./test/addons/drag/_configs.js\");\n\n\n\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.drag = _options__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].configs.drag = _configs__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    if (!this.opts.offCanvas) {\n        return;\n    }\n    if (typeof Hammer != 'function' || Hammer.VERSION < 2) {\n        return;\n    }\n    var options = this.opts.drag, configs = this.conf.drag;\n    //\tExtend shorthand options\n    if (typeof options == 'boolean') {\n        options = {\n            menu: options,\n            panels: options\n        };\n    }\n    if (typeof options != 'object') {\n        options = {};\n    }\n    if (typeof options.menu == 'boolean') {\n        options = {\n            open: options.menu\n        };\n    }\n    if (typeof options.menu != 'object') {\n        options.menu = {};\n    }\n    if (typeof options.panels == 'boolean') {\n        options.panels = {\n            close: options.panels\n        };\n    }\n    if (typeof options.panels != 'object') {\n        options.panels = {};\n    }\n    //\t/Extend shorthand options\n    this.opts.drag = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].extend(options, _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.drag);\n    function minMax(val, min, max) {\n        if (val < min) {\n            val = min;\n        }\n        if (val > max) {\n            val = max;\n        }\n        return val;\n    }\n    //\tDrag open the menu\n    if (options.menu.open) {\n        this.bind('setPage:after', () => {\n            //\tdefaults for \"left\"\n            var drag = {\n                events: 'panleft panright',\n                typeLower: 'x',\n                typeUpper: 'X',\n                open_dir: 'right',\n                close_dir: 'left',\n                negative: false\n            };\n            var _dimension = 'width', _winDimension = 'innerWidth', _direction = drag.open_dir;\n            var doPanstart = function (pos) {\n                if (pos <= options.menu.maxStartPos) {\n                    _stage = 1;\n                }\n            };\n            var getSlideNodes = function () {\n                return _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(document.body, '.mm-slideout');\n            };\n            var _stage = 0, _distance = 0, _maxDistance = 0;\n            var new_distance, drag_distance;\n            //\tFind menu position from Positioning extension\n            var x = this.opts.extensions['all'];\n            var position = (typeof x == 'undefined')\n                ? 'left'\n                : (x.indexOf('mm-menu_position-right') > -1)\n                    ? 'right'\n                    : (x.indexOf('mm-menu_position-top') > -1)\n                        ? 'top'\n                        : (x.indexOf('mm-menu_position-bottom') > -1)\n                            ? 'bottom'\n                            : 'left';\n            var zposition = (typeof x == 'undefined')\n                ? 'back'\n                : (x.indexOf('mm-menu_position-top') > -1) ||\n                    (x.indexOf('mm-menu_position-bottom') > -1) ||\n                    (x.indexOf('mm-menu_position-front') > -1)\n                    ? 'front'\n                    : 'back';\n            switch (position) {\n                case 'top':\n                case 'bottom':\n                    drag.events = 'panup pandown';\n                    drag.typeLower = 'y';\n                    drag.typeUpper = 'Y';\n                    _dimension = 'height';\n                    _winDimension = 'innerHeight';\n                    break;\n            }\n            switch (position) {\n                case 'right':\n                case 'bottom':\n                    drag.negative = true;\n                    doPanstart = function (pos) {\n                        if (pos >= window[_winDimension] - options.menu.maxStartPos) {\n                            _stage = 1;\n                        }\n                    };\n                    break;\n            }\n            switch (position) {\n                case 'right':\n                    drag.open_dir = 'left';\n                    drag.close_dir = 'right';\n                    break;\n                case 'top':\n                    drag.open_dir = 'down';\n                    drag.close_dir = 'up';\n                    break;\n                case 'bottom':\n                    drag.open_dir = 'up';\n                    drag.close_dir = 'down';\n                    break;\n            }\n            switch (zposition) {\n                case 'front':\n                    getSlideNodes = function () {\n                        return [this.node.menu];\n                    };\n                    break;\n            }\n            var slideOutNodes;\n            var dragNode = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].valueOrFn(this.node.menu, options.menu.node, _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.page);\n            if (typeof dragNode == 'string') {\n                dragNode = document.querySelector(dragNode);\n            }\n            //\tBind events\n            var _hammer = new Hammer(dragNode, this.opts.drag.vendors.hammer);\n            _hammer.on('panstart', (evnt) => {\n                doPanstart.call(this, evnt.center[drag.typeLower]);\n                slideOutNodes = getSlideNodes.call(this);\n                _direction = drag.open_dir;\n            });\n            _hammer.on(drag.events + ' panend', (evnt) => {\n                if (_stage > 0) {\n                    evnt.preventDefault();\n                }\n            });\n            _hammer.on(drag.events, (evnt) => {\n                new_distance = evnt['delta' + drag.typeUpper];\n                if (drag.negative) {\n                    new_distance = -new_distance;\n                }\n                if (new_distance != _distance) {\n                    _direction = (new_distance >= _distance) ? drag.open_dir : drag.close_dir;\n                }\n                _distance = new_distance;\n                if (_distance > options.menu.threshold) {\n                    if (_stage == 1) {\n                        if (document.documentElement.matches('.mm-wrapper_opened')) {\n                            return;\n                        }\n                        _stage = 2;\n                        this._openSetup();\n                        this.trigger('open:start');\n                        document.documentElement.classList.add('mm-wrapper_dragging');\n                        _maxDistance = minMax(window[_winDimension] * configs.menu[_dimension].perc, configs.menu[_dimension].min, configs.menu[_dimension].max);\n                    }\n                }\n                if (_stage == 2) {\n                    drag_distance = minMax(_distance, 10, _maxDistance) - (zposition == 'front' ? _maxDistance : 0);\n                    if (drag.negative) {\n                        drag_distance = -drag_distance;\n                    }\n                    let css_value = 'translate' + drag.typeUpper + '(' + drag_distance + 'px )';\n                    slideOutNodes.forEach((node) => {\n                        node.style['-webkit-transform'] = '-webkit-' + css_value;\n                        node.style['transform'] = css_value;\n                    });\n                }\n            });\n            _hammer.on('panend', (evnt) => {\n                if (_stage == 2) {\n                    document.documentElement.classList.remove('mm-wrapper_dragging');\n                    slideOutNodes.forEach((node) => {\n                        node.style['-webkit-transform'] = '';\n                        node.style['transform'] = '';\n                    });\n                    this[_direction == drag.open_dir ? '_openFinish' : 'close']();\n                }\n                _stage = 0;\n            });\n        });\n    }\n    //\tDrag close panels\n    if (options.panels.close) {\n        this.bind('initPanel:after', (panel) => {\n            var parent = panel['mmParent '];\n            if (parent) {\n                parent = parent.closest('.mm-panel');\n                var _hammer = new Hammer(panel, this.opts.drag.vendors.hammer), timeout = null;\n                _hammer.on('panright', (evnt) => {\n                    if (timeout) {\n                        return;\n                    }\n                    this.openPanel(parent);\n                    //\tprevent dragging while panel still open.\n                    timeout = setTimeout(() => {\n                        clearTimeout(timeout);\n                        timeout = null;\n                    }, this.conf.openingInterval + this.conf.transitionDuration);\n                });\n            }\n        });\n    }\n});\n;\n\n\n//# sourceURL=webpack:///./test/addons/drag/mmenu.drag.js?");

/***/ }),

/***/ "./test/addons/dropdown/_configs.js":
/*!******************************************!*\
  !*** ./test/addons/dropdown/_configs.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst configs = {\n    offset: {\n        button: {\n            x: -5,\n            y: 5\n        },\n        viewport: {\n            x: 20,\n            y: 20\n        }\n    },\n    height: {\n        max: 880\n    },\n    width: {\n        max: 440\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (configs);\n\n\n//# sourceURL=webpack:///./test/addons/dropdown/_configs.js?");

/***/ }),

/***/ "./test/addons/dropdown/_options.js":
/*!******************************************!*\
  !*** ./test/addons/dropdown/_options.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst options = {\n    drop: false,\n    fitViewport: true,\n    event: 'click',\n    position: {},\n    tip: true\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (options);\n\n\n//# sourceURL=webpack:///./test/addons/dropdown/_options.js?");

/***/ }),

/***/ "./test/addons/dropdown/mmenu.dropdown.js":
/*!************************************************!*\
  !*** ./test/addons/dropdown/mmenu.dropdown.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_options */ \"./test/addons/dropdown/_options.js\");\n/* harmony import */ var _configs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_configs */ \"./test/addons/dropdown/_configs.js\");\n\n\n\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.dropdown = _options__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].configs.dropdown = _configs__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    if (!this.opts.offCanvas) {\n        return;\n    }\n    var options = this.opts.dropdown, configs = this.conf.dropdown;\n    //\tExtend shorthand options\n    if (typeof options == 'boolean' && options) {\n        options = {\n            drop: options\n        };\n    }\n    if (typeof options != 'object') {\n        options = {};\n    }\n    if (typeof options.position == 'string') {\n        options.position = {\n            of: options.position\n        };\n    }\n    //\t/Extend shorthand options\n    this.opts.dropdown = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].extend(options, _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.dropdown);\n    if (!options.drop) {\n        return;\n    }\n    var button;\n    this.bind('initMenu:after', () => {\n        this.node.menu.classList.add('mm-menu_dropdown');\n        if (typeof options.position.of != 'string') {\n            let id = this.vars.orgMenuId;\n            if (id && id.length) {\n                options.position.of = '[href=\"#' + id + '\"]';\n            }\n        }\n        if (typeof options.position.of != 'string') {\n            return;\n        }\n        //\tGet the button to put the menu next to\n        button = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(document.body, options.position.of)[0];\n        //\tEmulate hover effect\n        var events = options.event.split(' ');\n        if (events.length == 1) {\n            events[1] = events[0];\n        }\n        if (events[0] == 'hover') {\n            button.addEventListener('mouseenter', (evnt) => {\n                this.open();\n            }, { passive: true });\n        }\n        if (events[1] == 'hover') {\n            this.node.menu.addEventListener('mouseleave', (evnt) => {\n                this.close();\n            }, { passive: true });\n        }\n    });\n    //\tAdd/remove classname and style when opening/closing the menu\n    this.bind('open:start', () => {\n        this.node.menu['mmStyle'] = this.node.menu.getAttribute('style');\n        document.documentElement.classList.add('mm-wrapper_dropdown');\n    });\n    this.bind('close:finish', () => {\n        this.node.menu.setAttribute('style', this.node.menu['mmStyle']);\n        document.documentElement.classList.remove('mm-wrapper_dropdown');\n    });\n    //\tUpdate the position and sizes\n    var getPosition = function (dir, obj) {\n        var css = obj[0], cls = obj[1];\n        var _scrollPos = dir == 'x' ? 'scrollLeft' : 'scrollTop', _outerSize = dir == 'x' ? 'offsetWidth' : 'offsetHeight', _startPos = dir == 'x' ? 'left' : 'top', _stopPos = dir == 'x' ? 'right' : 'bottom', _size = dir == 'x' ? 'width' : 'height', _winSize = dir == 'x' ? 'innerWidth' : 'innerHeight', _maxSize = dir == 'x' ? 'maxWidth' : 'maxHeight', _position = null;\n        var scrollPos = document.documentElement[_scrollPos] || document.body[_scrollPos], startPos = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.offset(button, _startPos) - scrollPos, stopPos = startPos + button[_outerSize], windowSize = window[_winSize];\n        var offs = configs.offset.button[dir] + configs.offset.viewport[dir];\n        //\tPosition set in option\n        if (options.position[dir]) {\n            switch (options.position[dir]) {\n                case 'left':\n                case 'bottom':\n                    _position = 'after';\n                    break;\n                case 'right':\n                case 'top':\n                    _position = 'before';\n                    break;\n            }\n        }\n        //\tPosition not set in option, find most space\n        if (_position === null) {\n            _position = (startPos + ((stopPos - startPos) / 2) < windowSize / 2) ? 'after' : 'before';\n        }\n        //\tSet position and max\n        var val, max;\n        if (_position == 'after') {\n            val = (dir == 'x') ? startPos : stopPos;\n            max = windowSize - (val + offs);\n            css[_startPos] = (val + configs.offset.button[dir]) + 'px';\n            css[_stopPos] = 'auto';\n            if (options.tip) {\n                cls.push('mm-menu_tip-' + (dir == 'x' ? 'left' : 'top'));\n            }\n        }\n        else {\n            val = (dir == 'x') ? stopPos : startPos;\n            max = val - offs;\n            css[_stopPos] = 'calc( 100% - ' + (val - configs.offset.button[dir]) + 'px )';\n            css[_startPos] = 'auto';\n            if (options.tip) {\n                cls.push('mm-menu_tip-' + (dir == 'x' ? 'right' : 'bottom'));\n            }\n        }\n        if (options.fitViewport) {\n            css[_maxSize] = Math.min(configs[_size].max, max) + 'px';\n        }\n        return [css, cls];\n    };\n    function position() {\n        if (!this.vars.opened) {\n            return;\n        }\n        this.node.menu.setAttribute('style', this.node.menu['mmStyle']);\n        var obj = [{}, []];\n        obj = getPosition.call(this, 'y', obj);\n        obj = getPosition.call(this, 'x', obj);\n        for (let s in obj[0]) {\n            this.node.menu.style[s] = obj[0][s];\n        }\n        if (options.tip) {\n            this.node.menu.classList.remove('mm-menu_tip-left', 'mm-menu_tip-right', 'mm-menu_tip-top', 'mm-menu_tip-bottom');\n            this.node.menu.classList.add(...obj[1]);\n        }\n    }\n    ;\n    this.bind('open:start', position);\n    window.addEventListener('resize', (evnt) => {\n        position.call(this);\n    }, { passive: true });\n    if (!this.opts.offCanvas.blockUI) {\n        window.addEventListener('scroll', (evnt) => {\n            position.call(this);\n        }, { passive: true });\n    }\n});\n;\n\n\n//# sourceURL=webpack:///./test/addons/dropdown/mmenu.dropdown.js?");

/***/ }),

/***/ "./test/addons/fixedelements/_configs.js":
/*!***********************************************!*\
  !*** ./test/addons/fixedelements/_configs.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst configs = {\n    fixed: {\n        insertMethod: 'append',\n        insertSelector: 'body'\n    },\n    sticky: {\n        offset: 0\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (configs);\n\n\n//# sourceURL=webpack:///./test/addons/fixedelements/_configs.js?");

/***/ }),

/***/ "./test/addons/fixedelements/mmenu.fixedelements.js":
/*!**********************************************************!*\
  !*** ./test/addons/fixedelements/mmenu.fixedelements.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n/* harmony import */ var _configs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_configs */ \"./test/addons/fixedelements/_configs.js\");\n\n\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].configs.fixedElements = _configs__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].configs.classNames.fixedElements = {\n    fixed: 'Fixed',\n    sticky: 'Sticky'\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    if (!this.opts.offCanvas) {\n        return;\n    }\n    var configs = this.conf.fixedElements;\n    var _fixd, _stck, fixed, stick;\n    this.bind('setPage:after', (page) => {\n        //\tFixed elements\n        _fixd = this.conf.classNames.fixedElements.fixed;\n        fixed = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(page, '.' + _fixd);\n        fixed.forEach((fxd) => {\n            _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].refactorClass(fxd, _fixd, 'mm-slideout');\n        });\n        document.querySelector(configs.fixed.insertSelector)[configs.fixed.insertMethod](fixed);\n        //\tSticky elements\n        _stck = this.conf.classNames.fixedElements.sticky;\n        _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(page, '.' + _stck)\n            .forEach((stick) => {\n            _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].refactorClass(stick, _stck, 'mm-sticky');\n        });\n        stick = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(page, '.mm-sticky');\n    });\n    this.bind('open:start', () => {\n        if (stick.length) {\n            if (window.getComputedStyle(document.documentElement).overflow == 'hidden') {\n                let scrollTop = (document.documentElement.scrollTop || document.body.scrollTop) + configs.sticky.offset;\n                stick.forEach((element) => {\n                    element.style.top = (parseInt(window.getComputedStyle(element).top, 10) + scrollTop) + 'px';\n                });\n            }\n        }\n    });\n    this.bind('close:finish', () => {\n        stick.forEach((element) => {\n            element.style.top = '';\n        });\n    });\n});\n;\n\n\n//# sourceURL=webpack:///./test/addons/fixedelements/mmenu.fixedelements.js?");

/***/ }),

/***/ "./test/addons/iconbar/_options.js":
/*!*****************************************!*\
  !*** ./test/addons/iconbar/_options.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst options = {\n    add: false,\n    top: [],\n    bottom: [],\n    type: 'default'\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (options);\n\n\n//# sourceURL=webpack:///./test/addons/iconbar/_options.js?");

/***/ }),

/***/ "./test/addons/iconbar/mmenu.iconbar.js":
/*!**********************************************!*\
  !*** ./test/addons/iconbar/mmenu.iconbar.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_options */ \"./test/addons/iconbar/_options.js\");\n\n\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.iconbar = _options__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    var options = this.opts.iconbar;\n    //\tExtend shorthand options\n    if (_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].typeof(options) == 'array') {\n        options = {\n            add: true,\n            top: options\n        };\n    }\n    //\t/Extend shorthand options\n    if (!options.add) {\n        return;\n    }\n    var iconbar;\n    ['top', 'bottom'].forEach((position, n) => {\n        var ctnt = options[position];\n        //\tExtend shorthand options\n        if (_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].typeof(ctnt) != 'array') {\n            ctnt = [ctnt];\n        }\n        //\tCreate node\n        var ibar = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('div.mm-iconbar__' + position);\n        //\tAdd content\n        for (let c = 0, l = ctnt.length; c < l; c++) {\n            if (typeof ctnt[c] == 'string') {\n                ibar.innerHTML += ctnt[c];\n            }\n            else {\n                ibar.append(ctnt[c]);\n            }\n        }\n        if (ibar.children.length) {\n            if (!iconbar) {\n                iconbar = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('div.mm-iconbar');\n            }\n            iconbar.append(ibar);\n        }\n    });\n    //\tAdd to menu\n    if (iconbar) {\n        this.bind('initMenu:after', () => {\n            this.node.menu.classList.add('mm-menu_iconbar');\n            this.node.menu.prepend(iconbar);\n        });\n        //\tTabs\n        if (options.type == 'tabs') {\n            iconbar.classList.add('mm-iconbar_tabs');\n            iconbar.addEventListener('click', (evnt) => {\n                var anchor = evnt.target;\n                if (!anchor.matches('a')) {\n                    return;\n                }\n                if (anchor.matches('.mm-iconbar__tab_selected')) {\n                    evnt.stopImmediatePropagation();\n                    return;\n                }\n                try {\n                    var panel = this.node.menu.querySelector(anchor.getAttribute('href'))[0];\n                    if (panel && panel.matches('.mm-panel')) {\n                        evnt.preventDefault();\n                        evnt.stopImmediatePropagation();\n                        this.openPanel(panel, false);\n                    }\n                }\n                catch (err) { }\n            });\n            const selectTab = (panel) => {\n                _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(iconbar, 'a')\n                    .forEach((anchor) => {\n                    anchor.classList.remove('mm-iconbar__tab_selected');\n                });\n                var anchor = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(iconbar, '[href=\"#' + panel.id + '\"]')[0];\n                if (anchor) {\n                    anchor.classList.add('mm-iconbar__tab_selected');\n                }\n                else {\n                    let parent = panel['mmParent'];\n                    if (parent) {\n                        selectTab(parent.closest('.mm-panel'));\n                    }\n                }\n            };\n            this.bind('openPanel:start', selectTab);\n        }\n    }\n});\n;\n\n\n//# sourceURL=webpack:///./test/addons/iconbar/mmenu.iconbar.js?");

/***/ }),

/***/ "./test/addons/iconpanels/_options.js":
/*!********************************************!*\
  !*** ./test/addons/iconpanels/_options.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst options = {\n    add: false,\n    blockPanel: true,\n    hideDivider: false,\n    hideNavbar: true,\n    visible: 3\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (options);\n\n\n//# sourceURL=webpack:///./test/addons/iconpanels/_options.js?");

/***/ }),

/***/ "./test/addons/iconpanels/mmenu.iconpanels.js":
/*!****************************************************!*\
  !*** ./test/addons/iconpanels/mmenu.iconpanels.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_options */ \"./test/addons/iconpanels/_options.js\");\n\n\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.iconPanels = _options__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    var options = this.opts.iconPanels;\n    var keepFirst = false;\n    //\tExtend shorthand options\n    if (typeof options == 'boolean') {\n        options = {\n            add: options\n        };\n    }\n    if (typeof options == 'number' ||\n        typeof options == 'string') {\n        options = {\n            add: true,\n            visible: options\n        };\n    }\n    if (typeof options != 'object') {\n        options = {};\n    }\n    if (options.visible == 'first') {\n        keepFirst = true;\n        options.visible = 1;\n    }\n    //\t/Extend shorthand options\n    this.opts.iconPanels = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].extend(options, _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.iconPanels);\n    options.visible = Math.min(3, Math.max(1, options.visible));\n    options.visible++;\n    //\tAdd the iconpanels\n    if (options.add) {\n        this.bind('initMenu:after', () => {\n            var cls = ['mm-menu_iconpanel'];\n            if (options.hideNavbar) {\n                cls.push('mm-menu_hidenavbar');\n            }\n            if (options.hideDivider) {\n                cls.push('mm-menu_hidedivider');\n            }\n            this.node.menu.classList.add(...cls);\n        });\n        var cls = '';\n        if (!keepFirst) {\n            for (var i = 0; i <= options.visible; i++) {\n                cls += ' mm-panel_iconpanel-' + i;\n            }\n            if (cls.length) {\n                cls = cls.slice(1);\n            }\n        }\n        const setPanels = (panel) => {\n            var panels = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.pnls, '.mm-panels');\n            panel = panel || panels[0];\n            if (panel.parentElement.matches('.mm-listitem_vertical')) {\n                return;\n            }\n            if (keepFirst) {\n                panels.forEach((panel, p) => {\n                    panel.classList[p == 0 ? 'add' : 'remove']('mm-panel_iconpanel-first');\n                });\n            }\n            else {\n                //\tRemove the \"iconpanel\" classnames from all panels.\n                panels.forEach((panel) => {\n                    panel.classList.remove(cls);\n                });\n                //\tFilter out panels that are not opened.\n                panels = panels.filter(panel => panel.matches('.mm-panel_opened-parent'));\n                //\tAdd the current panel to the list.\n                //\tTODO: check for duplicate?\n                panels.push(panel);\n                //\tRemove the \"hidden\" classname from all opened panels.\n                panels.forEach((panel) => {\n                    panel.classList.remove('mm-hidden');\n                });\n                //\tSlice the opened panels to the max visible amount.\n                panels = panels.slice(-options.visible);\n                //\tAdd the \"iconpanel\" classnames.\n                panels.forEach((panel, p) => {\n                    panel.classList.add('mm-panel_iconpanel-' + p);\n                });\n            }\n        };\n        this.bind('openPanel:start', setPanels);\n        this.bind('initPanels:after', setPanels);\n        this.bind('initListview:after', (panel) => {\n            if (options.blockPanel &&\n                !panel.parentElement.matches('.mm-listitem_vertical') &&\n                !_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(panel, '.mm-panel__blocker')[0]) {\n                var anchor = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('a.mm-panel__blocker');\n                anchor.setAttribute('href', panel.closest('.mm-panel').id);\n                panel.prepend(anchor);\n            }\n        });\n    }\n});\n;\n\n\n//# sourceURL=webpack:///./test/addons/iconpanels/mmenu.iconpanels.js?");

/***/ }),

/***/ "./test/addons/keyboardnavigation/_options.js":
/*!****************************************************!*\
  !*** ./test/addons/keyboardnavigation/_options.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst options = {\n    enable: false,\n    enhance: false\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (options);\n\n\n//# sourceURL=webpack:///./test/addons/keyboardnavigation/_options.js?");

/***/ }),

/***/ "./test/addons/keyboardnavigation/mmenu.keyboardnavigation.js":
/*!********************************************************************!*\
  !*** ./test/addons/keyboardnavigation/mmenu.keyboardnavigation.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_options */ \"./test/addons/keyboardnavigation/_options.js\");\n\n\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.keyboardNavigation = _options__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    //\tKeyboard navigation on touchscreens opens the virtual keyboard :/\n    //\tLets prevent that.\n    if (_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].support.touch) {\n        return;\n    }\n    var options = this.opts.keyboardNavigation;\n    //\tExtend shorthand options\n    if (typeof options == 'boolean' || typeof options == 'string') {\n        options = {\n            enable: options\n        };\n    }\n    if (typeof options != 'object') {\n        options = {};\n    }\n    //\t/Extend shorthand options\n    this.opts.keyboardNavigation = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].extend(options, _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.keyboardNavigation);\n    //\tEnable keyboard navigation\n    if (options.enable) {\n        let menuStart = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('button.mm-tabstart'), menuEnd = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('button.mm-tabend'), blockerEnd = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('button.mm-tabend');\n        this.bind('initMenu:after', () => {\n            if (options.enhance) {\n                this.node.menu.classList.add('mm-menu_keyboardfocus');\n            }\n            this._initWindow_keyboardNavigation(options.enhance);\n        });\n        this.bind('initOpened:before', () => {\n            this.node.menu.prepend(menuStart);\n            this.node.menu.append(menuEnd);\n            _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.menu, '.mm-navbars-top, .mm-navbars-bottom')\n                .forEach((navbars) => {\n                navbars.querySelectorAll('.mm-navbar__title')\n                    .forEach((title) => {\n                    title.setAttribute('tabindex', '-1');\n                });\n            });\n        });\n        this.bind('initBlocker:after', () => {\n            _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.blck.append(blockerEnd);\n            _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.blck, 'a')[0]\n                .classList.add('mm-tabstart');\n        });\n        var focusable = 'input, select, textarea, button, label, a[href]';\n        function setFocus(panel) {\n            panel = panel || _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.pnls, '.mm-panel_opened')[0];\n            var focus = null;\n            //\tFocus already is on an element in a navbar in this menu.\n            var navbar = document.activeElement.closest('.mm-navbar');\n            if (navbar) {\n                if (navbar.closest('.mm-menu') == this.node.menu) {\n                    return;\n                }\n            }\n            //\tSet the focus to the first focusable element by default.\n            if (options.enable == 'default') {\n                //\tFirst visible anchor in a listview in the current panel.\n                focus = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(panel, '.mm-listview a[href]:not(.mm-hidden)')[0];\n                //\tFirst focusable and visible element in the current panel.\n                if (!focus) {\n                    focus = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(panel, focusable + ':not(.mm-hidden)')[0];\n                }\n                //\tFirst focusable and visible element in a navbar.\n                if (!focus) {\n                    let elements = [];\n                    _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.menu, '.mm-navbars_top, .mm-navbars_bottom')\n                        .forEach((navbar) => {\n                        elements.push(..._core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(navbar, focusable + ':not(.mm-hidden)'));\n                    });\n                    focus = elements[0];\n                }\n            }\n            //\tDefault.\n            if (!focus) {\n                focus = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.menu, '.mm-tabstart')[0];\n            }\n            if (focus) {\n                focus.focus();\n            }\n        }\n        this.bind('open:finish', setFocus);\n        this.bind('openPanel:finish', setFocus);\n        //\tAdd screenreader / aria support.\n        this.bind('initOpened:after:sr-aria', () => {\n            [this.node.menu, _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.blck].forEach((element) => {\n                _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(element, '.mm-tabstart, .mm-tabend')\n                    .forEach((tabber) => {\n                    _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_aria(tabber, 'hidden', true);\n                    _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_role(tabber, 'presentation');\n                });\n            });\n        });\n    }\n});\n;\n/**\n * Initialize the window.\n * @param {boolean} enhance - Whether or not to also rich enhance the keyboard behavior.\n **/\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype._initWindow_keyboardNavigation = function (enhance) {\n    if (_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].evnt.windowKeydownOffCanvasTab) {\n        //\tRe-enable tabbing in general\n        window.removeEventListener('keydown', _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].evnt.windowKeydownOffCanvasTab);\n    }\n    if (!_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].evnt.windowFocusinKeyboardNavigationTab) {\n        _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].evnt.windowFocusinKeyboardNavigationTab = (evnt) => {\n            if (document.documentElement.matches('.mm-wrapper_opened')) {\n                let target = evnt.target;\n                if (target.matches('.mm-tabend')) {\n                    let next;\n                    //\tJump from menu to blocker.\n                    if (target.parentElement.matches('.mm-menu')) {\n                        if (_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.blck) {\n                            next = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.blck;\n                        }\n                    }\n                    //\tJump to opened menu.\n                    if (target.parentElement.matches('.mm-wrapper__blocker')) {\n                        next = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(document.body, '.mm-menu_offcanvas.mm-menu_opened')[0];\n                    }\n                    //\tIf no available element found, stay in current element.\n                    if (!next) {\n                        next = target.parentElement;\n                    }\n                    if (next) {\n                        _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(next, '.mm-tabstart')[0].focus();\n                    }\n                }\n            }\n        };\n        window.addEventListener('focusin', _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].evnt.windowFocusinKeyboardNavigationTab);\n    }\n    if (!_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].evnt.windowKeydownKeyboardNavigationKeys) {\n        _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].evnt.windowKeydownKeyboardNavigationKeys = (evnt) => {\n            var target = evnt.target;\n            var menu = target.closest('.mm-menu');\n            if (menu) {\n                let api = menu['mmenu'];\n                if (!target.matches('input, textarea')) {\n                    switch (evnt.keyCode) {\n                        //\tpress enter to toggle and check\n                        case 13:\n                            if (target.matches('.mm-toggle') ||\n                                target.matches('.mm-check')) {\n                                target.dispatchEvent(new Event('click'));\n                            }\n                            break;\n                        //\tprevent spacebar or arrows from scrolling the page\n                        case 32: //\tspace\n                        case 37: //\tleft\n                        case 38: //\ttop\n                        case 39: //\tright\n                        case 40: //\tbottom\n                            evnt.preventDefault();\n                            break;\n                    }\n                }\n                if (enhance) {\n                    //\tspecial case for input\n                    if (target.matches('input')) {\n                        switch (evnt.keyCode) {\n                            //\tempty searchfield with esc\n                            case 27:\n                                target.value = '';\n                                break;\n                        }\n                    }\n                    else {\n                        let api = menu['mmenu'];\n                        switch (evnt.keyCode) {\n                            //\tclose submenu with backspace\n                            case 8:\n                                let parent = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(menu, '.mm-panel_opened')[0]['mmParent'];\n                                if (parent) {\n                                    api.openPanel(parent.closest('.mm-panel'));\n                                }\n                                break;\n                            //\tclose menu with esc\n                            case 27:\n                                if (menu.matches('.mm-menu_offcanvas')) {\n                                    api.close();\n                                }\n                                break;\n                        }\n                    }\n                }\n            }\n        };\n        window.addEventListener('keydown', _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].evnt.windowKeydownKeyboardNavigationKeys);\n    }\n};\n\n\n//# sourceURL=webpack:///./test/addons/keyboardnavigation/mmenu.keyboardnavigation.js?");

/***/ }),

/***/ "./test/addons/lazysubmenus/_options.js":
/*!**********************************************!*\
  !*** ./test/addons/lazysubmenus/_options.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst options = {\n    load: false\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (options);\n\n\n//# sourceURL=webpack:///./test/addons/lazysubmenus/_options.js?");

/***/ }),

/***/ "./test/addons/lazysubmenus/mmenu.lazysubmenus.js":
/*!********************************************************!*\
  !*** ./test/addons/lazysubmenus/mmenu.lazysubmenus.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_options */ \"./test/addons/lazysubmenus/_options.js\");\n\n\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.lazySubmenus = _options__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    var options = this.opts.lazySubmenus;\n    //\tExtend shorthand options\n    if (typeof options == 'boolean') {\n        options = {\n            load: options\n        };\n    }\n    if (typeof options != 'object') {\n        options = {};\n    }\n    //\t/Extend shorthand options\n    this.opts.lazySubmenus = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].extend(options, _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.lazySubmenus);\n    //\tSliding submenus\n    if (options.load) {\n        //\tprevent all sub panels from initPanels\n        this.bind('initMenu:after', () => {\n            var panels = [];\n            //\tFind all potential subpanels\n            _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(this.node.pnls, 'li')\n                .forEach((listitem) => {\n                panels.push(..._core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(listitem, this.conf.panelNodetype.join(', ')));\n            });\n            //\tFilter out all non-panels and add the lazyload classes\n            panels.filter(panel => !panel.matches('.mm-listview_inset'))\n                .filter(panel => !panel.matches('.mm-nolistview'))\n                .filter(panel => !panel.matches('.mm-nopanel'))\n                .forEach((panel) => {\n                panel.classList.add('mm-panel_lazysubmenu', 'mm-nolistview', 'mm-nopanel');\n            });\n        });\n        //\tprepare current and one level sub panels for initPanels\n        this.bind('initPanels:before', (panels) => {\n            panels = panels || _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.pnls, this.conf.panelNodetype.join(', '));\n            panels.forEach((panel) => {\n                var filter = '.mm-panel_lazysubmenu', panels = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(panel, filter);\n                if (panel.matches(filter)) {\n                    panels.unshift(panel);\n                }\n                panels.filter(panel => !panel.matches('.mm-panel_lazysubmenu .mm-panel_lazysubmenu'))\n                    .forEach((panel) => {\n                    panel.classList.remove('mm-panel_lazysubmenu', 'mm-nolistview', 'mm-nopanel');\n                });\n            });\n        });\n        //\tinitPanels for the default opened panel\n        this.bind('initOpened:before', () => {\n            var panels = [];\n            _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(this.node.pnls, '.' + this.conf.classNames.selected)\n                .forEach((listitem) => {\n                panels.push(..._core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.parents(listitem, '.mm-panel_lazysubmenu'));\n            });\n            if (panels.length) {\n                panels.forEach((panel) => {\n                    panel.classList.remove('mm-panel_lazysubmenu', 'mm-nolistview mm-nopanel');\n                });\n                this.initPanels([panels[panels.length - 1]]);\n            }\n        });\n        //\tinitPanels for current- and sub panels before openPanel\n        this.bind('openPanel:before', (panel) => {\n            var filter = '.mm-panel_lazysubmenu', panels = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(panel, filter);\n            if (panel.matches(filter)) {\n                panels.unshift(panel);\n            }\n            panels = panels.filter(panel => !panel.matches('.mm-panel_lazysubmenu .mm-panel_lazysubmenu'));\n            if (panels.length) {\n                this.initPanels(panels);\n            }\n        });\n    }\n});\n;\n\n\n//# sourceURL=webpack:///./test/addons/lazysubmenus/mmenu.lazysubmenus.js?");

/***/ }),

/***/ "./test/addons/navbars/_configs.js":
/*!*****************************************!*\
  !*** ./test/addons/navbars/_configs.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst configs = {\n    breadcrumbs: {\n        separator: '/',\n        removeFirst: false\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (configs);\n\n\n//# sourceURL=webpack:///./test/addons/navbars/_configs.js?");

/***/ }),

/***/ "./test/addons/navbars/_navbar.breadcrumbs.js":
/*!****************************************************!*\
  !*** ./test/addons/navbars/_navbar.breadcrumbs.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (navbar) {\n    //\tAdd content\n    var breadcrumbs = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('span.mm-navbar__breadcrumbs');\n    navbar.append(breadcrumbs);\n    this.bind('initNavbar:after', (panel) => {\n        if (panel.querySelector('.mm-navbar__breadcrumbs')) {\n            return;\n        }\n        panel.classList.remove('mm-panel_has-navbar');\n        var crumbs = [], breadcrumbs = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('span.mm-navbar__breadcrumbs'), current = panel, first = true;\n        while (current) {\n            if (!current.matches('.mm-panel')) {\n                current = current.closest('.mm-panel');\n            }\n            if (!current.parentElement.matches('.mm-listitem_vertical')) {\n                var text = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(current, '.mm-navbar__title')[0].textContent;\n                if (text.length) {\n                    crumbs.unshift(first ? '<span>' + text + '</span>' : '<a href=\"#' + current.id + '\">' + text + '</a>');\n                }\n                first = false;\n            }\n            current = current['mmParent'];\n        }\n        if (this.conf.navbars.breadcrumbs.removeFirst) {\n            crumbs.shift();\n        }\n        breadcrumbs.innerHTML = crumbs.join('<span class=\"mm-separator\">' + this.conf.navbars.breadcrumbs.separator + '</span>');\n        _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(panel, '.mm-navbar')[0].append(breadcrumbs);\n    });\n    //\tUpdate for to opened panel\n    this.bind('openPanel:start', (panel) => {\n        var crumbs = panel.querySelector('.mm-navbar__breadcrumbs');\n        if (crumbs) {\n            breadcrumbs.innerHTML = crumbs.innerHTML;\n        }\n    });\n    //\tAdd screenreader / aria support\n    this.bind('initNavbar:after:sr-aria', (panel) => {\n        _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(panel, '.mm-breadcrumbs a')\n            .forEach((anchor) => {\n            _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_aria(anchor, 'owns', anchor.getAttribute('href').slice(1));\n        });\n    });\n});\n;\n\n\n//# sourceURL=webpack:///./test/addons/navbars/_navbar.breadcrumbs.js?");

/***/ }),

/***/ "./test/addons/navbars/_navbar.close.js":
/*!**********************************************!*\
  !*** ./test/addons/navbars/_navbar.close.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (navbar) {\n    //\tAdd content\n    var close = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('a.mm-btn.mm-btn_close.mm-navbar__btn');\n    navbar.append(close);\n    //\tUpdate to page node\n    this.bind('setPage:after', (page) => {\n        close.setAttribute('href', '#' + page.id);\n    });\n    //\tAdd screenreader / text support\n    this.bind('setPage:after:sr-text', () => {\n        close.innerHTML = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_text(this.i18n(this.conf.screenReader.text.closeMenu));\n        _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_aria(close, 'owns', close.getAttribute('href').slice(1));\n    });\n});\n;\n\n\n//# sourceURL=webpack:///./test/addons/navbars/_navbar.close.js?");

/***/ }),

/***/ "./test/addons/navbars/_navbar.next.js":
/*!*********************************************!*\
  !*** ./test/addons/navbars/_navbar.next.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (navbar) {\n    //\tAdd content\n    var next = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('a.mm-btn.mm-btn_next.mm-navbar__btn');\n    navbar.append(next);\n    //\tUpdate to opened panel\n    var org;\n    var _url, _txt;\n    this.bind('openPanel:start', (panel) => {\n        org = panel.querySelector('.' + this.conf.classNames.navbars.panelNext);\n        _url = org ? org.getAttribute('href') : '';\n        _txt = org ? org.innerHTML : '';\n        if (_url) {\n            next.setAttribute('href', _url);\n        }\n        else {\n            next.removeAttribute('href');\n        }\n        next.classList[_url || _txt ? 'remove' : 'add']('mm-hidden');\n        next.innerHTML = _txt;\n    });\n    //\tAdd screenreader / aria support\n    this.bind('openPanel:start:sr-aria', (panel) => {\n        _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_aria(next, 'hidden', next.matches('mm-hidden'));\n        _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_aria(next, 'owns', (next.getAttribute('href') || '').slice(1));\n    });\n});\n;\n\n\n//# sourceURL=webpack:///./test/addons/navbars/_navbar.next.js?");

/***/ }),

/***/ "./test/addons/navbars/_navbar.prev.js":
/*!*********************************************!*\
  !*** ./test/addons/navbars/_navbar.prev.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (navbar) {\n    //\tAdd content.\n    var prev = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('a.mm-btn.mm-btn_prev.mm-navbar__btn');\n    navbar.append(prev);\n    this.bind('initNavbar:after', (panel) => {\n        panel.classList.remove('mm-panel_has-navbar');\n    });\n    //\tUpdate to opened panel.\n    var org;\n    var _url, _txt;\n    this.bind('openPanel:start', (panel) => {\n        if (panel.parentElement.matches('.mm-listitem_vertical')) {\n            return;\n        }\n        org = panel.querySelector('.' + this.conf.classNames.navbars.panelPrev);\n        if (!org) {\n            org = panel.querySelector('.mm-navbar__btn.mm-btn_prev');\n        }\n        _url = org ? org.getAttribute('href') : '';\n        _txt = org ? org.innerHTML : '';\n        if (_url) {\n            prev.setAttribute('href', _url);\n        }\n        else {\n            prev.removeAttribute('href');\n        }\n        prev.classList[_url || _txt ? 'remove' : 'add']('mm-hidden');\n        prev.innerHTML = _txt;\n    });\n    //\tAdd screenreader / aria support\n    this.bind('initNavbar:after:sr-aria', (panel) => {\n        _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_aria(panel.querySelector('.mm-navbar'), 'hidden', true);\n    });\n    this.bind('openPanel:start:sr-aria', (panel) => {\n        _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_aria(prev, 'hidden', prev.matches('.mm-hidden'));\n        _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_aria(prev, 'owns', (prev.getAttribute('href') || '').slice(1));\n    });\n});\n;\n\n\n//# sourceURL=webpack:///./test/addons/navbars/_navbar.prev.js?");

/***/ }),

/***/ "./test/addons/navbars/_navbar.searchfield.js":
/*!****************************************************!*\
  !*** ./test/addons/navbars/_navbar.searchfield.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (navbar) {\n    if (_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].typeof(this.opts.searchfield) != 'object') {\n        this.opts.searchfield = {};\n    }\n    this.opts.searchfield.add = true;\n    this.opts.searchfield.addTo = [navbar];\n});\n;\n\n\n//# sourceURL=webpack:///./test/addons/navbars/_navbar.searchfield.js?");

/***/ }),

/***/ "./test/addons/navbars/_navbar.tabs.js":
/*!*********************************************!*\
  !*** ./test/addons/navbars/_navbar.tabs.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (navbar) {\n    navbar.classList.add('mm-navbar_tabs');\n    navbar.parentElement.classList.add('mm-navbars_has-tabs');\n    var anchors = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(navbar, 'a');\n    navbar.addEventListener('click', (evnt) => {\n        var anchor = evnt.target;\n        if (!anchor.matches('a')) {\n            return;\n        }\n        if (anchor.matches('.mm-navbar__tab_selected')) {\n            evnt.stopImmediatePropagation();\n            return;\n        }\n        try {\n            this.openPanel(this.node.menu.querySelector(anchor.getAttribute('href')), false);\n            evnt.stopImmediatePropagation();\n        }\n        catch (err) { }\n    });\n    function selectTab(panel) {\n        anchors.forEach((anchor) => {\n            anchor.classList.remove('mm-navbar__tab_selected');\n        });\n        var anchor = anchors.filter(anchor => anchor.matches('[href=\"#' + panel.id + '\"]'))[0];\n        if (anchor) {\n            anchor.classList.add('mm-navbar__tab_selected');\n        }\n        else {\n            var parent = panel['mmParent'];\n            if (parent) {\n                selectTab.call(this, parent.closest('.mm-panel'));\n            }\n        }\n    }\n    this.bind('openPanel:start', selectTab);\n});\n;\n\n\n//# sourceURL=webpack:///./test/addons/navbars/_navbar.tabs.js?");

/***/ }),

/***/ "./test/addons/navbars/_navbar.title.js":
/*!**********************************************!*\
  !*** ./test/addons/navbars/_navbar.title.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (navbar) {\n    //\tAdd content to the navbar.\n    var title = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('a.mm-navbar__title');\n    navbar.append(title);\n    //\tUpdate the title to the opened panel.\n    var _url, _txt;\n    var original;\n    this.bind('openPanel:start', (panel) => {\n        //\tDo nothing in a vertically expanding panel.\n        if (panel.parentElement.matches('.mm-listitem_vertical')) {\n            return;\n        }\n        //\tFind the original title in the opened panel.\n        original = panel.querySelector('.' + this.conf.classNames.navbars.panelTitle);\n        if (!original) {\n            original = panel.querySelector('.mm-navbar__title');\n        }\n        //\tGet the URL for the title.\n        _url = original ? original.getAttribute('href') : '';\n        if (_url) {\n            title.setAttribute('href', _url);\n        }\n        else {\n            title.removeAttribute('href');\n        }\n        //\tGet the text for the title.\n        _txt = original ? original.innerHTML : '';\n        title.innerHTML = _txt;\n        //\tShow or hide the title.\n        title.classList[_url || _txt ? 'remove' : 'add']('mm-hidden');\n    });\n    //\tAdd screenreader / aria support\n    var prev;\n    this.bind('openPanel:start:sr-aria', (panel) => {\n        if (this.opts.screenReader.text) {\n            if (!prev) {\n                var navbars = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.menu, '.mm-navbars_top, .mm-navbars_bottom');\n                navbars.forEach((navbar) => {\n                    let btn = navbar.querySelector('.mm-btn_prev');\n                    if (btn) {\n                        prev = btn;\n                    }\n                });\n            }\n            if (prev) {\n                var hidden = true;\n                if (this.opts.navbar.titleLink == 'parent') {\n                    hidden = !prev.matches('.mm-hidden');\n                }\n                _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_aria(title, 'hidden', hidden);\n            }\n        }\n    });\n});\n;\n\n\n//# sourceURL=webpack:///./test/addons/navbars/_navbar.title.js?");

/***/ }),

/***/ "./test/addons/navbars/_options.js":
/*!*****************************************!*\
  !*** ./test/addons/navbars/_options.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst options = [];\n/* harmony default export */ __webpack_exports__[\"default\"] = (options);\n\n\n//# sourceURL=webpack:///./test/addons/navbars/_options.js?");

/***/ }),

/***/ "./test/addons/navbars/mmenu.navbars.js":
/*!**********************************************!*\
  !*** ./test/addons/navbars/mmenu.navbars.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_options */ \"./test/addons/navbars/_options.js\");\n/* harmony import */ var _configs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_configs */ \"./test/addons/navbars/_configs.js\");\n/* harmony import */ var _navbar_breadcrumbs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_navbar.breadcrumbs */ \"./test/addons/navbars/_navbar.breadcrumbs.js\");\n/* harmony import */ var _navbar_close__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./_navbar.close */ \"./test/addons/navbars/_navbar.close.js\");\n/* harmony import */ var _navbar_next__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./_navbar.next */ \"./test/addons/navbars/_navbar.next.js\");\n/* harmony import */ var _navbar_prev__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./_navbar.prev */ \"./test/addons/navbars/_navbar.prev.js\");\n/* harmony import */ var _navbar_searchfield__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./_navbar.searchfield */ \"./test/addons/navbars/_navbar.searchfield.js\");\n/* harmony import */ var _navbar_title__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./_navbar.title */ \"./test/addons/navbars/_navbar.title.js\");\n/* harmony import */ var _navbar_tabs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./_navbar.tabs */ \"./test/addons/navbars/_navbar.tabs.js\");\n\n\n\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.navbars = _options__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].configs.navbars = _configs__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].configs.classNames.navbars = {\n    panelNext: 'Next',\n    panelPrev: 'Prev',\n    panelTitle: 'Title'\n};\n\n\n\n\n\n\nconst navbarContents = {\n    breadcrumbs: _navbar_breadcrumbs__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    close: _navbar_close__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n    next: _navbar_next__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n    prev: _navbar_prev__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n    searchfield: _navbar_searchfield__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n    title: _navbar_title__WEBPACK_IMPORTED_MODULE_8__[\"default\"]\n};\n\nconst navbarTypes = {\n    tabs: _navbar_tabs__WEBPACK_IMPORTED_MODULE_9__[\"default\"]\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    var navs = this.opts.navbars;\n    if (typeof navs == 'undefined') {\n        return;\n    }\n    if (!(navs instanceof Array)) {\n        navs = [navs];\n    }\n    var sizes = {}, navbars = {};\n    if (!navs.length) {\n        return;\n    }\n    navs.forEach((options) => {\n        //\tExtend shorthand options.\n        if (typeof options == 'boolean' && options) {\n            options = {};\n        }\n        if (typeof options != 'object') {\n            options = {};\n        }\n        if (typeof options.content == 'undefined') {\n            options.content = ['prev', 'title'];\n        }\n        if (!(options.content instanceof Array)) {\n            options.content = [options.content];\n        }\n        //\t/Extend shorthand options.\n        //\tCreate the navbar element.\n        var navbar = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('div.mm-navbar');\n        //\tGet the height for the navbar.\n        var height = options.height;\n        if (typeof height != 'number') {\n            //\tDefaults to a height of 1.\n            height = 1;\n        }\n        else {\n            //\tRestrict the height between 1 to 4.\n            height = Math.min(4, Math.max(1, height));\n            if (height > 1) {\n                //\tAdd the height class to the navbar.\n                navbar.classList.add('mm-navbar_size-' + height);\n            }\n        }\n        //\tGet the position for the navbar.\n        var position = options.position;\n        //\tRestrict the position to either \"bottom\" or \"top\" (default).\n        if (position !== 'bottom') {\n            position = 'top';\n        }\n        //\tAdd up the wrapper height for the navbar position.\n        if (!sizes[position]) {\n            sizes[position] = 0;\n        }\n        sizes[position] += height;\n        //\tCreate the wrapper for the navbar position.\n        if (!navbars[position]) {\n            navbars[position] = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('div.mm-navbars_' + position);\n        }\n        navbars[position].append(navbar);\n        //\tAdd content to the navbar.\n        for (let c = 0, l = options.content.length; c < l; c++) {\n            let ctnt = options.content[c];\n            //\tThe content is a string.\n            if (typeof ctnt == 'string') {\n                //\tThe content refers to one of the navbar-presets (\"prev\", \"title\", etc).\n                let func = navbarContents[ctnt];\n                if (typeof func == 'function') {\n                    //\tCall the preset function.\n                    func.call(this, navbar);\n                    //\tThe content is just HTML.\n                }\n                else {\n                    //\tAdd the HTML.\n                    navbar.innerHTML += ctnt;\n                }\n                //\tThe content is not a string, it must be an element.\n            }\n            else {\n                navbar.append(ctnt);\n            }\n        }\n        //\tIf buttons were added, tell the navbar.\n        if (navbar.querySelector('.mm-navbar__btn')) {\n            navbar.classList.add('mm-navbar_has-btns');\n        }\n        //\tThe type option is set.\n        if (typeof options.type == 'string') {\n            //\tThe function refers to one of the navbar-presets (\"tabs\").\n            let func = navbarTypes[options.type];\n            if (typeof func == 'function') {\n                //\tCall the preset function.\n                func.call(this, navbar);\n            }\n        }\n    });\n    //\tAdd to menu\n    this.bind('initMenu:after', () => {\n        for (let position in navbars) {\n            this.node.menu.classList.add('mm-menu_navbar_' + position + '-' + sizes[position]);\n            this.node.menu[position == 'bottom' ? 'append' : 'prepend'](navbars[position]);\n        }\n    });\n});\n;\n\n\n//# sourceURL=webpack:///./test/addons/navbars/mmenu.navbars.js?");

/***/ }),

/***/ "./test/addons/pagescroll/_configs.js":
/*!********************************************!*\
  !*** ./test/addons/pagescroll/_configs.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst configs = {\n    scrollOffset: 0,\n    updateOffset: 50\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (configs);\n\n\n//# sourceURL=webpack:///./test/addons/pagescroll/_configs.js?");

/***/ }),

/***/ "./test/addons/pagescroll/_options.js":
/*!********************************************!*\
  !*** ./test/addons/pagescroll/_options.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst options = {\n    scroll: false,\n    update: false\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (options);\n\n\n//# sourceURL=webpack:///./test/addons/pagescroll/_options.js?");

/***/ }),

/***/ "./test/addons/pagescroll/mmenu.pagescroll.js":
/*!****************************************************!*\
  !*** ./test/addons/pagescroll/mmenu.pagescroll.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_options */ \"./test/addons/pagescroll/_options.js\");\n/* harmony import */ var _configs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_configs */ \"./test/addons/pagescroll/_configs.js\");\n\n\n\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.pageScroll = _options__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].configs.pageScroll = _configs__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    var options = this.opts.pageScroll, configs = this.conf.pageScroll;\n    //\tExtend shorthand options.\n    if (typeof options == 'boolean') {\n        options = {\n            scroll: options\n        };\n    }\n    //\t/Extend shorthand options.\n    this.opts.pageScroll = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].extend(options, _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.pageScroll);\n    var section;\n    function scrollTo(offset) {\n        if (section && section.matches(':visible')) {\n            //\tTODO: animate?\n            document.documentElement.scrollTop = section.offsetTop + offset;\n            document.body.scrollTop = section.offsetTop + offset;\n        }\n        section = null;\n    }\n    function anchorInPage(href) {\n        try {\n            if (href != '#' &&\n                href.slice(0, 1) == '#') {\n                return _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.page.querySelector(href);\n            }\n            return null;\n        }\n        catch (err) {\n            return null;\n        }\n    }\n    //\tScroll to section after clicking menu item.\n    if (options.scroll) {\n        this.bind('close:finish', () => {\n            scrollTo(configs.scrollOffset);\n        });\n    }\n    //\tAdd click behavior.\n    //\tPrevents default behavior when clicking an anchor.\n    if (this.opts.offCanvas && options.scroll) {\n        this.clck.push((anchor, args) => {\n            section = null;\n            //\tDon't continue if the clicked anchor is not in the menu.\n            if (!args.inMenu) {\n                return;\n            }\n            //\tDon't continue if the targeted section is not on the page.\n            var href = anchor.getAttribute('href');\n            section = anchorInPage(href);\n            if (!section) {\n                return;\n            }\n            //\tIf the sidebar add-on is \"expanded\"...\n            if (this.node.menu.matches('.mm-menu_sidebar-expanded') &&\n                document.documentElement.matches('.mm-wrapper_sidebar-expanded')) {\n                //\t... scroll the page to the section.\n                scrollTo(this.conf.pageScroll.scrollOffset);\n                //\t... otherwise...\n            }\n            else {\n                //\t... close the menu.\n                return {\n                    close: true\n                };\n            }\n        });\n    }\n    //\tUpdate selected menu item after scrolling.\n    if (options.update) {\n        let scts = [];\n        this.bind('initListview:after', (panel) => {\n            //\tTODO de sections zouden geordend moeten worden op de hoogte in de DOM, niet op volgorde in het menu.\n            let listitems = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(panel, '.mm-listitem');\n            _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterListItemAnchors(listitems)\n                .forEach((anchor) => {\n                var href = anchor.getAttribute('href');\n                var section = anchorInPage(href);\n                if (section) {\n                    scts.unshift(section);\n                }\n            });\n        });\n        let _selected = -1;\n        window.addEventListener('scroll', (evnt) => {\n            var scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n            for (var s = 0; s < scts.length; s++) {\n                if (scts[s].offsetTop < scrollTop + configs.updateOffset) {\n                    if (_selected !== s) {\n                        _selected = s;\n                        let panel = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.pnls, '.mm-panel_opened')[0], listitems = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(panel, '.mm-listitem'), anchors = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterListItemAnchors(listitems);\n                        anchors = anchors.filter(anchor => anchor.matches('[href=\"#' + scts[s].id + '\"]'));\n                        if (anchors.length) {\n                            this.setSelected(anchors[0].parentElement);\n                        }\n                    }\n                    break;\n                }\n            }\n        });\n    }\n});\n;\n\n\n//# sourceURL=webpack:///./test/addons/pagescroll/mmenu.pagescroll.js?");

/***/ }),

/***/ "./test/addons/searchfield/_configs.js":
/*!*********************************************!*\
  !*** ./test/addons/searchfield/_configs.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst configs = {\n    clear: false,\n    form: false,\n    input: false,\n    submit: false\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (configs);\n\n\n//# sourceURL=webpack:///./test/addons/searchfield/_configs.js?");

/***/ }),

/***/ "./test/addons/searchfield/_options.js":
/*!*********************************************!*\
  !*** ./test/addons/searchfield/_options.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst options = {\n    add: false,\n    addTo: 'panels',\n    cancel: false,\n    noResults: 'No results found.',\n    placeholder: 'Search',\n    panel: {\n        add: false,\n        dividers: true,\n        fx: 'none',\n        id: null,\n        splash: null,\n        title: 'Search'\n    },\n    search: true,\n    showTextItems: false,\n    showSubPanels: true\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (options);\n\n\n//# sourceURL=webpack:///./test/addons/searchfield/_options.js?");

/***/ }),

/***/ "./test/addons/searchfield/mmenu.searchfield.js":
/*!******************************************************!*\
  !*** ./test/addons/searchfield/mmenu.searchfield.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_options */ \"./test/addons/searchfield/_options.js\");\n/* harmony import */ var _configs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_configs */ \"./test/addons/searchfield/_configs.js\");\n\n\n\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.searchfield = _options__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].configs.searchfield = _configs__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    var options = this.opts.searchfield, configs = this.conf.searchfield;\n    //\tExtend shorthand options.\n    if (typeof options == 'boolean') {\n        options = {\n            add: options\n        };\n    }\n    if (typeof options != 'object') {\n        options = {};\n    }\n    if (typeof options.panel == 'boolean') {\n        options.panel = {\n            add: options.panel\n        };\n    }\n    if (typeof options.panel != 'object') {\n        options.panel = {};\n    }\n    //\t/Extend shorthand options.\n    if (!options.add) {\n        return;\n    }\n    //\tExtend logical options.\n    if (options.addTo == 'panel') {\n        options.panel.add = true;\n    }\n    if (options.panel.add) {\n        options.showSubPanels = false;\n        if (options.panel.splash) {\n            options.cancel = true;\n        }\n    }\n    //\t/Extend logical options.\n    this.opts.searchfield = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].extend(options, _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.searchfield);\n    //\tBlur searchfield\n    this.bind('close:start', () => {\n        _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(this.node.menu, '.mm-searchfield')\n            .forEach((input) => {\n            input.blur();\n        });\n    });\n    this.bind('initPanels:after', (panels) => {\n        var searchpanel = null;\n        //\tAdd the search panel\n        if (options.panel.add) {\n            searchpanel = this._initSearchPanel(panels);\n        }\n        //\tAdd the searchfield\n        var addTo = null;\n        switch (options.addTo) {\n            case 'panels':\n                addTo = panels;\n                break;\n            case 'panel':\n                addTo = [searchpanel];\n                break;\n            default:\n                if (typeof options.addTo == 'string') {\n                    addTo = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(this.node.menu, options.addTo);\n                }\n                else if (_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].typeof(options.addTo) == 'array') {\n                    addTo = options.addTo;\n                }\n                break;\n        }\n        addTo.forEach((form) => {\n            form = this._initSearchfield(form);\n            if (options.search && form) {\n                this._initSearching(form);\n            }\n        });\n        //\tAdd the no-results message\n        if (options.noResults) {\n            (options.panel.add ? [searchpanel] : panels).forEach((panel) => {\n                this._initNoResultsMsg(panel);\n            });\n        }\n    });\n    //\tAdd click behavior.\n    //\tPrevents default behavior when clicking an anchor\n    this.clck.push((anchor, args) => {\n        if (args.inMenu) {\n            if (anchor.matches('.mm-searchfield__btn')) {\n                //\tClicking the clear button\n                if (anchor.matches('.mm-btn_close')) {\n                    let form = anchor.closest('.mm-searchfield'), input = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(form, 'input')[0];\n                    input.value = '';\n                    this.search(input);\n                    return true;\n                }\n                //\tClicking the submit button\n                if (anchor.matches('.mm-btn_next')) {\n                    let form = anchor.closest('form');\n                    if (form) {\n                        form.submit();\n                    }\n                    return true;\n                }\n            }\n        }\n    });\n});\n;\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype._initSearchPanel = function (panels) {\n    var options = this.opts.searchfield, configs = this.conf.searchfield;\n    //\tOnly once\n    if (_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.pnls, '.mm-panel_search').length) {\n        return null;\n    }\n    var searchpanel = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('div.mm-panel_search'), listview = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('ul');\n    searchpanel.append(listview);\n    this.node.pnls.append(searchpanel);\n    if (options.panel.id) {\n        searchpanel.id = options.panel.id;\n    }\n    if (options.panel.title) {\n        searchpanel.setAttribute('data-mm-title', options.panel.title);\n    }\n    switch (options.panel.fx) {\n        case false:\n            break;\n        case 'none':\n            searchpanel.classList.add('mm-panel_noanimation');\n            break;\n        default:\n            searchpanel.classList.add('mm-panel_fx-' + options.panel.fx);\n            break;\n    }\n    //\tAdd splash content\n    if (options.panel.splash) {\n        let splash = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('div.mm-panel__searchsplash');\n        splash.innerHTML = options.panel.splash;\n        searchpanel.append(splash);\n    }\n    this._initPanels([searchpanel]);\n    return searchpanel;\n};\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype._initSearchfield = function (wrapper) {\n    var options = this.opts.searchfield, configs = this.conf.searchfield;\n    //\tNo searchfield in vertical submenus\t\n    if (wrapper.parentElement.matches('.mm-listitem_vertical')) {\n        return null;\n    }\n    //\tOnly one searchfield per panel\n    var form = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(wrapper, '.mm-searchfield')[0];\n    if (form) {\n        return form;\n    }\n    function addAttributes(element, attr) {\n        if (attr) {\n            for (var a in attr) {\n                element.setAttribute(a, attr[a]);\n            }\n        }\n    }\n    var form = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create((configs.form ? 'form' : 'div') + '.mm-searchfield'), field = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('div.mm-searchfield__input'), input = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('input');\n    input.type = 'text';\n    input.autocomplete = 'off';\n    input.placeholder = this.i18n(options.placeholder);\n    field.append(input);\n    form.append(field);\n    wrapper.prepend(form);\n    if (wrapper.matches('.mm-panel')) {\n        wrapper.classList.add('mm-panel_has-searchfield');\n    }\n    //\tAdd attributes to the input\n    addAttributes(input, configs.input);\n    //\tAdd the clear button\n    if (configs.clear) {\n        let anchor = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('a.mm-btn.mm-btn_close.mm-searchfield__btn');\n        anchor.setAttribute('href', '#');\n        field.append(anchor);\n    }\n    //\tAdd attributes and submit to the form\n    addAttributes(form, configs.form);\n    if (configs.form && configs.submit && !configs.clear) {\n        let anchor = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('a.mm-btn.mm-btn_next.mm-searchfield__btn');\n        anchor.setAttribute('href', '#');\n        field.append(anchor);\n    }\n    if (options.cancel) {\n        let anchor = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('a.mm-searchfield__cancel');\n        anchor.setAttribute('href', '#');\n        anchor.textContent = this.i18n('cancel');\n        form.append(anchor);\n    }\n    return form;\n};\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype._initSearching = function (form) {\n    var options = this.opts.searchfield, configs = this.conf.searchfield;\n    var data = {};\n    //\tIn the searchpanel.\n    if (form.closest('.mm-panel_search')) {\n        data.panels = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(this.node.pnls, '.mm-panel');\n        data.noresults = [form.closest('.mm-panel')];\n        //\tIn a panel\n    }\n    else if (form.closest('.mm-panel')) {\n        data.panels = [form.closest('.mm-panel')];\n        data.noresults = data.panels;\n        //\tNot in a panel, global\n    }\n    else {\n        data.panels = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(this.node.pnls, '.mm-panel');\n        data.noresults = [this.node.menu];\n    }\n    //\tFilter out vertical submenus\n    data.panels = data.panels.filter(panel => !panel.parentElement.matches('.mm-listitem_vertical'));\n    //\tFilter out search panel\n    data.panels = data.panels.filter(panel => !panel.matches('.mm-panel_search'));\n    var listitems = [];\n    data.panels.forEach((panel) => {\n        listitems.push(..._core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(panel, '.mm-listitem'));\n    });\n    data.listitems = listitems.filter(listitem => !listitem.matches('.mm-listitem_divider'));\n    data.dividers = listitems.filter(listitem => listitem.matches('.mm-listitem_divider'));\n    var searchpanel = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.pnls, '.mm-panel_search')[0], input = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(form, 'input')[0], cancel = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(form, '.mm-searchfield__cancel')[0];\n    input['mmSearchfield'] = data;\n    //\tOpen the splash panel when focussing the input.\n    if (options.panel.add && options.panel.splash) {\n        //\tRemove the focus eventlistener from the input.\n        if (this.evnt.inputFocusSearchfieldSplash) {\n            input.removeEventListener('focus', this.evnt.inputFocusSearchfieldSplash);\n        }\n        //\tCreate the eventlistener.\n        this.evnt.inputFocusSearchfieldSplash = (evnt) => {\n            this.openPanel(searchpanel);\n        };\n        //\tAdd the focus eventlistener to the input..\n        input.addEventListener('focus', this.evnt.inputFocusSearchfieldSplash);\n    }\n    //\tHandle the cancel button.\n    if (options.cancel) {\n        //\tRemove the focus eventlistener from the input.\n        if (this.evnt.inputFocusSearchfieldCancel) {\n            input.removeEventListener('focus', this.evnt.inputFocusSearchfieldCancel);\n        }\n        //\tCreate the eventlistener.\t\n        this.evnt.inputFocusSearchfieldCancel = (evnt) => {\n            cancel.classList.add('mm-searchfield__cancel-active');\n        };\n        //\tAdd the focus eventlistener to the input.\n        input.addEventListener('focus', this.evnt.inputFocusSearchfieldCancel);\n        //\tRemove the focus eventlistener from the input.\n        if (this.evnt.cancelClickSearchfieldSplash) {\n            cancel.removeEventListener('click', this.evnt.cancelClickSearchfieldSplash);\n        }\n        //\tCreate the eventlistener.\t\n        this.evnt.cancelClickSearchfieldSplash = (evnt) => {\n            evnt.preventDefault();\n            cancel.classList.remove('mm-searchfield__cancel-active');\n            if (searchpanel.matches('.mm-panel_opened')) {\n                let parents = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.pnls, '.mm-panel_opened-parent');\n                if (parents.length) {\n                    this.openPanel(parents[parents.length - 1]);\n                }\n            }\n        };\n        //\tAdd the focus eventlistener to the input.\n        cancel.addEventListener('click', this.evnt.cancelClickSearchfieldSplash);\n    }\n    if (options.panel.add && options.addTo == 'panel') {\n        this.bind('openPanel:finish', (panel) => {\n            if (panel === searchpanel) {\n                input.focus();\n            }\n        });\n    }\n    //\tRemove the focus eventlistener from the input.\n    if (this.evnt.inputInputSearchfieldSearch) {\n        input.removeEventListener('input', this.evnt.inputInputSearchfieldSearch);\n    }\n    //\tCreate the eventlistener.\t\n    this.evnt.inputInputSearchfieldSearch = (evnt) => {\n        switch (evnt.keyCode) {\n            case 9: //\ttab\n            case 16: //\tshift\n            case 17: //\tcontrol\n            case 18: //\talt\n            case 37: //\tleft\n            case 38: //\ttop\n            case 39: //\tright\n            case 40: //\tbottom\n                break;\n            default:\n                this.search(input);\n                break;\n        }\n    };\n    //\tAdd the focus eventlistener to the input.\n    input.addEventListener('input', this.evnt.inputInputSearchfieldSearch);\n    //\tFire once initially\n    this.search(input);\n};\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype._initNoResultsMsg = function (wrapper) {\n    if (!wrapper) {\n        return;\n    }\n    var options = this.opts.searchfield, configs = this.conf.searchfield;\n    //\tNot in a panel\n    if (!wrapper.closest('.mm-panel')) {\n        wrapper = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.pnls, '.mm-panel')[0];\n    }\n    //\tOnly once\n    if (_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(wrapper, '.mm-panel__noresultsmsg').length) {\n        return;\n    }\n    //\tAdd no-results message\n    var message = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('div.mm-panel__noresultsmsg.mm-hidden');\n    message.innerHTML = this.i18n(options.noResults);\n    wrapper.prepend(message);\n};\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.search = function (input, query) {\n    var options = this.opts.searchfield, configs = this.conf.searchfield;\n    query = query || '' + input.value;\n    query = query.toLowerCase().trim();\n    var data = input['mmSearchfield'];\n    var form = input.closest('.mm-searchfield'), buttons = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(form, '.mm-btn'), searchpanel = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.pnls, '.mm-panel_search')[0];\n    var panels = data.panels, noresults = data.noresults, listitems = data.listitems, dividers = data.dividers;\n    //\tReset previous results\n    listitems.forEach((listitem) => {\n        listitem.classList.remove('mm-listitem_nosubitems');\n    });\n    //\tTODO: dit klopt niet meer\t\n    // Mmenu.$(listitems).find( '.mm-btn_fullwidth-search' )\n    // .removeClass( 'mm-btn_fullwidth-search mm-btn_fullwidth' );\n    if (searchpanel) {\n        _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(searchpanel, '.mm-listview')[0].innerHTML = '';\n    }\n    panels.forEach((panel) => {\n        panel.scrollTop = 0;\n    });\n    //\tSearch\n    if (query.length) {\n        //\tInitially hide all listitems\n        listitems.forEach((listitem) => {\n            listitem.classList.add('mm-hidden');\n        });\n        dividers.forEach((divider) => {\n            divider.classList.add('mm-hidden');\n        });\n        //\tRe-show only listitems that match\n        listitems.forEach((listitem) => {\n            var _search = '.mm-listitem__text'; // 'a'\n            if (options.showTextItems || (options.showSubPanels && listitem.querySelector('.mm-btn_next'))) {\n                // _search = 'a, span';\n            }\n            else {\n                _search = 'a' + _search;\n            }\n            let text = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(listitem, _search)[0];\n            if (text && text.textContent.toLowerCase().indexOf(query) > -1) {\n                listitem.classList.remove('mm-hidden');\n            }\n        });\n        //\tShow all mached listitems in the search panel\n        if (options.panel.add) {\n            //\tClone all matched listitems into the search panel\n            let allitems = [];\n            panels.forEach((panel) => {\n                let listitems = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterListItems(_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(panel, '.mm-listitem'));\n                if (listitems.length) {\n                    if (options.panel.dividers) {\n                        let divider = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('li.mm-listitem.mm-listitem_divider');\n                        divider.innerHTML = panel.querySelector('.mm-navbar__title').innerHTML;\n                        listitems.push(divider);\n                    }\n                    listitems.forEach((listitem) => {\n                        allitems.push(listitem.cloneNode(true));\n                    });\n                }\n            });\n            //\tRemove toggles, checks and open buttons\n            allitems.forEach((listitem) => {\n                listitem.querySelectorAll('.mm-toggle, .mm-check, .mm-btn')\n                    .forEach((element) => {\n                    element.remove();\n                });\n            });\n            //\tAdd to the search panel\n            _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(searchpanel, '.mm-listview')[0].append(...listitems);\n            //\tOpen the search panel\n            this.openPanel(searchpanel);\n        }\n        else {\n            //\tAlso show listitems in sub-panels for matched listitems\n            if (options.showSubPanels) {\n                panels.forEach((panel) => {\n                    let listitems = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(panel, '.mm-listitem');\n                    _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterListItems(listitems)\n                        .forEach((listitem) => {\n                        let child = listitem['mmChild'];\n                        if (child) {\n                            _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(child, '.mm-listitem')\n                                .forEach((listitem) => {\n                                listitem.classList.remove('mm-hidden');\n                            });\n                        }\n                    });\n                });\n            }\n            //\tUpdate parent for sub-panel\n            panels.reverse()\n                .forEach((panel, p) => {\n                let parent = panel['mmParent'];\n                if (parent) {\n                    //\tThe current panel has mached listitems\n                    let listitems = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(panel, '.mm-listitem');\n                    if (_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterListItems(listitems).length) {\n                        //\tShow parent\n                        if (parent.matches('.mm-hidden')) {\n                            parent.classList.remove('mm-hidden');\n                            //\tTODO: dit klopt niet meer...\n                            //\tHet idee was een btn tijdelijk fullwidth te laten zijn omdat het zelf geen resultaat is, maar zn submenu wel.\n                            // Mmenu.$(parent)\n                            // \t.children( '.mm-btn_next' )\n                            // \t.not( '.mm-btn_fullwidth' )\n                            // \t.addClass( 'mm-btn_fullwidth' )\n                            // \t.addClass( 'mm-btn_fullwidth-search' );\n                        }\n                    }\n                    else if (!input.closest('.mm-panel')) {\n                        if (panel.matches('.mm-panel_opened') ||\n                            panel.matches('.mm-panel_opened-parent')) {\n                            //\tCompensate the timeout for the opening animation\n                            setTimeout(() => {\n                                this.openPanel(parent.closest('.mm-panel'));\n                            }, (p + 1) * (this.conf.openingInterval * 1.5));\n                        }\n                        parent.classList.add('mm-listitem_nosubitems');\n                    }\n                }\n            });\n            //\tShow first preceeding divider of parent\n            panels.forEach((panel) => {\n                let listitems = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(panel, '.mm-listitem');\n                _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterListItems(listitems)\n                    .forEach((listitem) => {\n                    let divider = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.prevAll(listitem, '.mm-listitem_divider')[0];\n                    if (divider) {\n                        divider.classList.remove('mm-hidden');\n                    }\n                });\n            });\n        }\n        //\tShow submit / clear button\n        buttons.forEach(button => button.classList.remove('mm-hidden'));\n        //\tShow/hide no results message\n        noresults.forEach(wrapper => {\n            _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(wrapper, '.mm-panel__noresultsmsg')\n                .forEach(message => message.classList[listitems.filter(listitem => !listitem.matches('.mm-hidden')).length ? 'add' : 'remove']('mm-hidden'));\n        });\n        if (options.panel.add) {\n            //\tHide splash\n            if (options.panel.splash) {\n                _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(searchpanel, '.mm-panel__searchsplash')\n                    .forEach(splash => splash.classList.add('mm-hidden'));\n            }\n            //\tRe-show original listitems when in search panel\n            listitems.forEach(listitem => listitem.classList.remove('mm-hidden'));\n            dividers.forEach(divider => divider.classList.remove('mm-hidden'));\n        }\n        //\tDon't search\n    }\n    else {\n        //\tShow all items\n        listitems.forEach(listitem => listitem.classList.remove('mm-hidden'));\n        dividers.forEach(divider => divider.classList.remove('mm-hidden'));\n        //\tHide submit / clear button\n        buttons.forEach(button => button.classList.add('mm-hidden'));\n        //\tHide no results message\n        noresults.forEach(wrapper => {\n            _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(wrapper, '.mm-panel__noresultsmsg')\n                .forEach(message => message.classList.add('mm-hidden'));\n        });\n        if (options.panel.add) {\n            //\tShow splash\n            if (options.panel.splash) {\n                _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(searchpanel, '.mm-panel__searchsplash')\n                    .forEach(splash => splash.classList.remove('mm-hidden'));\n                //\tClose panel \n            }\n            else if (!input.closest('.mm-panel_search')) {\n                let opened = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.pnls, '.mm-panel_opened-parent');\n                this.openPanel(opened.slice(-1)[0]);\n            }\n        }\n    }\n    //\tUpdate for other addons\n    this.trigger('updateListview');\n};\n\n\n//# sourceURL=webpack:///./test/addons/searchfield/mmenu.searchfield.js?");

/***/ }),

/***/ "./test/addons/sectionindexer/_options.js":
/*!************************************************!*\
  !*** ./test/addons/sectionindexer/_options.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst options = {\n    add: false,\n    addTo: 'panels'\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (options);\n\n\n//# sourceURL=webpack:///./test/addons/sectionindexer/_options.js?");

/***/ }),

/***/ "./test/addons/sectionindexer/mmenu.sectionindexer.js":
/*!************************************************************!*\
  !*** ./test/addons/sectionindexer/mmenu.sectionindexer.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_options */ \"./test/addons/sectionindexer/_options.js\");\n\n\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.sectionIndexer = _options__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    var options = this.opts.sectionIndexer;\n    //\tExtend shorthand options\n    if (typeof options == 'boolean') {\n        options = {\n            add: options\n        };\n    }\n    if (typeof options != 'object') {\n        options = {};\n    }\n    //\t/Extend shorthand options\n    this.opts.sectionIndexer = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].extend(options, _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.sectionIndexer);\n    if (!options.add) {\n        return;\n    }\n    this.bind('initPanels:after', (panels) => {\n        //\tSet the panel(s)\n        if (options.addTo != 'panels') {\n            //\tTODO addTo kan ook een HTML element zijn?\n            panels = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(this.node.menu, options.addTo)\n                .filter(panel => panel.matches('.mm-panel'));\n        }\n        panels.forEach((panel) => {\n            _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(panel, '.mm-listitem_divider')\n                .forEach((listitem) => {\n                listitem.closest('.mm-panel').classList.add('mm-panel_has-sectionindexer');\n            });\n        });\n        //\tAdd the indexer, only if it does not allready excists\n        if (!this.node.indx) {\n            let buttons = '';\n            'abcdefghijklmnopqrstuvwxyz'.split('').forEach((letter) => {\n                buttons += '<a href=\"#\">' + letter + '</a>';\n            });\n            let indexer = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('div.mm-sectionindexer');\n            indexer.innerHTML = buttons;\n            this.node.menu.prepend(indexer);\n            this.node.indx = indexer;\n            //\tPrevent default behavior when clicking an anchor\n            this.node.indx.addEventListener('click', (evnt) => {\n                var anchor = evnt.target;\n                if (anchor.matches('a')) {\n                    evnt.preventDefault();\n                }\n            });\n            //\tScroll onMouseOver / onTouchStart\n            let mouseOverEvent = (evnt) => {\n                if (!evnt.target.matches('a')) {\n                    return;\n                }\n                var letter = evnt.target.textContent, panel = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.pnls, '.mm-panel_opened')[0];\n                var newTop = -1, oldTop = panel.scrollTop;\n                panel.scrollTop = 0;\n                _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(panel, '.mm-listitem_divider')\n                    .filter(divider => !divider.matches('.mm-hidden'))\n                    .forEach((divider) => {\n                    if (newTop < 0 &&\n                        letter == divider.textContent.trim().slice(0, 1).toLowerCase()) {\n                        newTop = divider.offsetTop;\n                    }\n                });\n                panel.scrollTop = newTop > -1 ? newTop : oldTop;\n            };\n            this.node.indx.addEventListener('mouseover', mouseOverEvent);\n            if (_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].support.touch) {\n                this.node.indx.addEventListener('touchstart', mouseOverEvent);\n            }\n        }\n        //\tShow or hide the indexer\n        function update(panel) {\n            panel = panel || _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.pnls, '.mm-panel_opened')[0];\n            this.node.menu.classList[panel.matches('.mm-panel_has-sectionindexer') ? 'add' : 'remove']('mm-menu_has-sectionindexer');\n        }\n        ;\n        this.bind('openPanel:start', update);\n        this.bind('initPanels:after', update); // TODO panel argument is an array\n    });\n});\n;\n\n\n//# sourceURL=webpack:///./test/addons/sectionindexer/mmenu.sectionindexer.js?");

/***/ }),

/***/ "./test/addons/setselected/_options.js":
/*!*********************************************!*\
  !*** ./test/addons/setselected/_options.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst options = {\n    current: true,\n    hover: false,\n    parent: false\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (options);\n\n\n//# sourceURL=webpack:///./test/addons/setselected/_options.js?");

/***/ }),

/***/ "./test/addons/setselected/mmenu.setselected.js":
/*!******************************************************!*\
  !*** ./test/addons/setselected/mmenu.setselected.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_options */ \"./test/addons/setselected/_options.js\");\n\n\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.setSelected = _options__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    var options = this.opts.setSelected;\n    //\tExtend shorthand options\n    if (typeof options == 'boolean') {\n        options = {\n            hover: options,\n            parent: options\n        };\n    }\n    if (typeof options != 'object') {\n        options = {};\n    }\n    //\tExtend shorthand options\n    this.opts.setSelected = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].extend(options, _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.setSelected);\n    //\tFind current by URL\n    if (options.current == 'detect') {\n        function findCurrent(url) {\n            url = url.split(\"?\")[0].split(\"#\")[0];\n            var anchor = this.node.menu.querySelector('a[href=\"' + url + '\"], a[href=\"' + url + '/\"]');\n            if (anchor) {\n                this.setSelected(anchor.parentElement);\n            }\n            else {\n                var arr = url.split('/').slice(0, -1);\n                if (arr.length) {\n                    findCurrent.call(this, arr.join('/'));\n                }\n            }\n        }\n        ;\n        this.bind('initMenu:after', () => {\n            findCurrent.call(this, window.location.href);\n        });\n        //\tRemove current selected item\n    }\n    else if (!options.current) {\n        this.bind('initListview:after', (panel) => {\n            _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(panel, '.mm-listitem_selected')\n                .forEach((listitem) => {\n                listitem.classList.remove('mm-listitem_selected');\n            });\n        });\n    }\n    //\tAdd :hover effect on items\n    if (options.hover) {\n        this.bind('initMenu:after', () => {\n            this.node.menu.classList.add('mm-menu_selected-hover');\n        });\n    }\n    //\tSet parent item selected for submenus\n    if (options.parent) {\n        this.bind('openPanel:finish', (panel) => {\n            //\tRemove all\n            _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(this.node.pnls, '.mm-listitem_selected-parent')\n                .forEach((listitem) => {\n                listitem.classList.remove('mm-listitem_selected-parent');\n            });\n            //\tMove up the DOM tree\n            var parent = panel['mmParent'];\n            while (parent) {\n                if (!parent.matches('.mm-listitem_vertical')) {\n                    parent.classList.add('mm-listitem_selected-parent');\n                }\n                parent = parent.closest('.mm-panel');\n                parent = parent['mmParent'];\n            }\n        });\n        this.bind('initMenu:after', () => {\n            this.node.menu.classList.add('mm-menu_selected-parent');\n        });\n    }\n});\n;\n\n\n//# sourceURL=webpack:///./test/addons/setselected/mmenu.setselected.js?");

/***/ }),

/***/ "./test/addons/sidebar/_options.js":
/*!*****************************************!*\
  !*** ./test/addons/sidebar/_options.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst options = {\n    collapsed: {\n        use: false,\n        blockMenu: true,\n        hideDivider: false,\n        hideNavbar: true\n    },\n    expanded: {\n        use: false\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (options);\n\n\n//# sourceURL=webpack:///./test/addons/sidebar/_options.js?");

/***/ }),

/***/ "./test/addons/sidebar/mmenu.sidebar.js":
/*!**********************************************!*\
  !*** ./test/addons/sidebar/mmenu.sidebar.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_options */ \"./test/addons/sidebar/_options.js\");\n\n\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.sidebar = _options__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    if (!this.opts.offCanvas) {\n        return;\n    }\n    var options = this.opts.sidebar;\n    //\tExtend shorthand options\n    if (typeof options == 'string' ||\n        (typeof options == 'boolean' && options) ||\n        typeof options == 'number') {\n        options = {\n            expanded: options\n        };\n    }\n    if (typeof options != 'object') {\n        options = {};\n    }\n    //\tExtend collapsed shorthand options.\n    if (typeof options.collapsed == 'boolean' && options.collapsed) {\n        options.collapsed = {\n            use: 'all'\n        };\n    }\n    if (typeof options.collapsed == 'string' ||\n        typeof options.collapsed == 'number') {\n        options.collapsed = {\n            use: options.collapsed\n        };\n    }\n    if (typeof options.collapsed != 'object') {\n        options.collapsed = {};\n    }\n    if (typeof options.collapsed.use == 'number') {\n        options.collapsed.use = '(min-width: ' + options.collapsed.use + 'px)';\n    }\n    //\tExtend expanded shorthand options.\n    if (typeof options.expanded == 'boolean' && options.expanded) {\n        options.expanded = {\n            use: 'all'\n        };\n    }\n    if (typeof options.expanded == 'string' ||\n        typeof options.expanded == 'number') {\n        options.expanded = {\n            use: options.expanded\n        };\n    }\n    if (typeof options.expanded != 'object') {\n        options.expanded = {};\n    }\n    if (typeof options.expanded.use == 'number') {\n        options.expanded.use = '(min-width: ' + options.expanded.use + 'px)';\n    }\n    //\t/Extend shorthand options\n    this.opts.sidebar = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].extend(options, _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.sidebar);\n    var clsclpsd = 'mm-wrapper_sidebar-collapsed', clsxpndd = 'mm-wrapper_sidebar-expanded';\n    //\tCollapsed\n    if (options.collapsed.use) {\n        this.bind('initMenu:after', () => {\n            this.node.menu.classList.add('mm-menu_sidebar-collapsed');\n            if (options.collapsed.blockMenu &&\n                this.opts.offCanvas &&\n                !_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.menu, '.mm-menu__blocker')[0]) {\n                let anchor = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('a.mm-menu__blocker');\n                anchor.setAttribute('href', '#' + this.node.menu.id);\n                this.node.menu.prepend(anchor);\n            }\n            if (options.collapsed.hideNavbar) {\n                this.node.menu.classList.add('mm-menu_hidenavbar');\n            }\n            if (options.collapsed.hideDivider) {\n                this.node.menu.classList.add('mm-menu_hidedivider');\n            }\n        });\n        if (typeof options.collapsed.use == 'boolean') {\n            this.bind('initMenu:after', () => {\n                document.documentElement.classList.add(clsclpsd);\n            });\n        }\n        else {\n            this.matchMedia(options.collapsed.use, () => {\n                document.documentElement.classList.add(clsclpsd);\n            }, () => {\n                document.documentElement.classList.remove(clsclpsd);\n            });\n        }\n    }\n    //\tExpanded\n    if (options.expanded.use) {\n        this.bind('initMenu:after', () => {\n            this.node.menu.classList.add('mm-menu_sidebar-expanded');\n        });\n        if (typeof options.expanded.use == 'boolean') {\n            this.bind('initMenu:after', () => {\n                document.documentElement.classList.add(clsxpndd);\n                this.open();\n            });\n        }\n        else {\n            this.matchMedia(options.expanded.use, () => {\n                document.documentElement.classList.add(clsxpndd);\n                if (!document.documentElement.matches('.mm-wrapper_sidebar-closed')) {\n                    this.open();\n                }\n            }, () => {\n                document.documentElement.classList.remove(clsxpndd);\n                this.close();\n            });\n        }\n        this.bind('close:start', () => {\n            if (document.documentElement.matches('.' + clsxpndd)) {\n                document.documentElement.classList.add('mm-wrapper_sidebar-closed');\n            }\n        });\n        this.bind('open:start', () => {\n            document.documentElement.classList.remove('mm-wrapper_sidebar-closed');\n        });\n        //\tAdd click behavior.\n        //\tPrevents default behavior when clicking an anchor\n        this.clck.push((anchor, args) => {\n            if (args.inMenu && args.inListview) {\n                if (document.documentElement.matches('.mm-wrapper_sidebar-expanded')) {\n                    return {\n                        close: false\n                    };\n                }\n            }\n        });\n    }\n});\n;\n\n\n//# sourceURL=webpack:///./test/addons/sidebar/mmenu.sidebar.js?");

/***/ }),

/***/ "./test/addons/toggles/mmenu.toggles.js":
/*!**********************************************!*\
  !*** ./test/addons/toggles/mmenu.toggles.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].configs.classNames.toggles = {\n    toggle: 'Toggle',\n    check: 'Check'\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    this.bind('initPanels:after', (panels) => {\n        //\tRefactor toggle classes\n        panels.forEach((panel) => {\n            _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(panel, 'input')\n                .forEach((input) => {\n                _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].refactorClass(input, this.conf.classNames.toggles.toggle, 'mm-toggle');\n                _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].refactorClass(input, this.conf.classNames.toggles.check, 'mm-check');\n            });\n        });\n        //\tLoop over all panels.\n        panels.forEach((panel) => {\n            //\tLoop over all toggles and checks.\n            _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(panel, 'input.mm-toggle, input.mm-check')\n                .forEach((input) => {\n                //\tFind the listitem the input is in.\n                var parent = input.closest('li');\n                //\tGet or create an ID for the input.\n                var id = input.id || _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getUniqueId();\n                //\tOnly needs to be done once.\n                if (!_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(parent, 'label[for=\"' + id + '\"]').length) {\n                    input.id = id;\n                    parent.prepend(input);\n                    let label = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('label.mm-' + (input.matches('.mm-toggle') ? 'toggle' : 'check'));\n                    label.setAttribute('for', id);\n                    let text = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(parent, '.mm-listitem__text')[0];\n                    text.parentElement.insertBefore(label, text.nextSibling);\n                }\n            });\n        });\n    });\n});\n;\n\n\n//# sourceURL=webpack:///./test/addons/toggles/mmenu.toggles.js?");

/***/ }),

/***/ "./test/core/offcanvas/_configs.js":
/*!*****************************************!*\
  !*** ./test/core/offcanvas/_configs.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst configs = {\n    menu: {\n        insertMethod: 'prepend',\n        insertSelector: 'body'\n    },\n    page: {\n        nodetype: 'div',\n        selector: null,\n        noSelector: []\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (configs);\n\n\n//# sourceURL=webpack:///./test/core/offcanvas/_configs.js?");

/***/ }),

/***/ "./test/core/offcanvas/_options.js":
/*!*****************************************!*\
  !*** ./test/core/offcanvas/_options.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst options = {\n    blockUI: true,\n    moveBackground: true\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (options);\n\n\n//# sourceURL=webpack:///./test/core/offcanvas/_options.js?");

/***/ }),

/***/ "./test/core/offcanvas/mmenu.offcanvas.js":
/*!************************************************!*\
  !*** ./test/core/offcanvas/mmenu.offcanvas.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_options */ \"./test/core/offcanvas/_options.js\");\n/* harmony import */ var _configs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_configs */ \"./test/core/offcanvas/_configs.js\");\n\n\n\n_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.offCanvas = _options__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].configs.offCanvas = _configs__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    if (!this.opts.offCanvas) {\n        return;\n    }\n    var options = this.opts.offCanvas, configs = this.conf.offCanvas;\n    //\tAdd methods to the API\n    this._api.push('open', 'close', 'setPage');\n    //\tExtend shorthand options\n    if (typeof options != 'object') {\n        options = {};\n    }\n    //\t/Extend shorthand options\n    this.opts.offCanvas = _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].extend(options, _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.offCanvas);\n    this.conf.offCanvas = _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].extend(configs, _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].configs.offCanvas);\n    //\tSetup the menu\n    this.vars.opened = false;\n    //\tAdd off-canvas behavior\n    this.bind('initMenu:after', () => {\n        //\tSetup the UI blocker\n        this._initBlocker();\n        //\tSetup the page\n        this.setPage(_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.page);\n        //\tSetup window events\n        this._initWindow_offCanvas();\n        //\tSetup the menu\n        this.node.menu.classList.add('mm-menu_offcanvas');\n        this.node.menu.parentElement.classList.remove('mm-wrapper');\n        //\tAppend to the <body>\n        document.querySelector(configs.menu.insertSelector)[configs.menu.insertMethod](this.node.menu);\n        //\tOpen if url hash equals menu id (usefull when user clicks the hamburger icon before the menu is created)\n        let hash = window.location.hash;\n        if (hash) {\n            let id = this.vars.orgMenuId;\n            if (id && id == hash.slice(1)) {\n                setTimeout(() => {\n                    this.open();\n                }, 1000);\n            }\n        }\n    });\n    //\tSync the blocker to target the page.\n    this.bind('setPage:after', (page) => {\n        if (_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.blck) {\n            _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.blck, 'a')\n                .forEach((anchor) => {\n                anchor.setAttribute('href', '#' + page.id);\n            });\n        }\n    });\n    //\tAdd screenreader / aria support\n    this.bind('open:start:sr-aria', () => {\n        _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_aria(this.node.menu, 'hidden', false);\n    });\n    this.bind('close:finish:sr-aria', () => {\n        _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_aria(this.node.menu, 'hidden', true);\n    });\n    this.bind('initMenu:after:sr-aria', () => {\n        _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_aria(this.node.menu, 'hidden', true);\n    });\n    //\tAdd screenreader / text support\n    this.bind('initBlocker:after:sr-text', () => {\n        _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.blck, 'a')\n            .forEach((anchor) => {\n            anchor.innerHTML = _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_text(this.i18n(this.conf.screenReader.text.closeMenu));\n        });\n    });\n    //\tAdd click behavior.\n    //\tPrevents default behavior when clicking an anchor\n    this.clck.push((anchor, args) => {\n        //\tOpen menu if the clicked anchor links to the menu\n        var id = this.vars.orgMenuId;\n        if (id) {\n            if (anchor.matches('[href=\"#' + id + '\"]')) {\n                //\tOpening this menu from within this menu\n                //\t\t-> Open menu\n                if (args.inMenu) {\n                    this.open();\n                    return true;\n                }\n                //\tOpening this menu from within a second menu\n                //\t\t-> Close the second menu before opening this menu\n                var menu = anchor.closest('.mm-menu');\n                if (menu) {\n                    var api = menu['mmenu'];\n                    if (api && api.close) {\n                        api.close();\n                        _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].transitionend(menu, () => {\n                            this.open();\n                        }, this.conf.transitionDuration);\n                        return true;\n                    }\n                }\n                //\tOpening this menu\n                this.open();\n                return true;\n            }\n        }\n        //\tClose menu\n        id = _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.page.id;\n        if (id) {\n            if (anchor.matches('[href=\"#' + id + '\"]')) {\n                this.close();\n                return true;\n            }\n        }\n        return;\n    });\n});\n;\n/**\n * Open the menu.\n */\n_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.open = function () {\n    //\tInvoke \"before\" hook.\n    this.trigger('open:before');\n    if (this.vars.opened) {\n        return;\n    }\n    this._openSetup();\n    //\tWithout the timeout, the animation won't work because the menu had display: none;\n    setTimeout(() => {\n        this._openFinish();\n    }, this.conf.openingInterval);\n    //\tInvoke \"after\" hook.\n    this.trigger('open:after');\n};\n_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype._openSetup = function () {\n    var options = this.opts.offCanvas;\n    //\tClose other menus\n    this.closeAllOthers();\n    //\tStore style and position\n    _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.page['mmStyle'] = _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.page.getAttribute('style') || '';\n    //\tTrigger window-resize to measure height\n    _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].evnt.windowResizeOffCanvas({ force: true });\n    var clsn = ['mm-wrapper_opened'];\n    //\tAdd options\n    if (options.blockUI) {\n        clsn.push('mm-wrapper_blocking');\n    }\n    if (options.blockUI == 'modal') {\n        clsn.push('mm-wrapper_modal');\n    }\n    if (options.moveBackground) {\n        clsn.push('mm-wrapper_background');\n    }\n    document.querySelector('html').classList.add(...clsn);\n    //\tOpen\n    //\tWithout the timeout, the animation won't work because the menu had display: none;\n    setTimeout(() => {\n        this.vars.opened = true;\n    }, this.conf.openingInterval);\n    this.node.menu.classList.add('mm-menu_opened');\n};\n/**\n * Finish opening the menu.\n */\n_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype._openFinish = function () {\n    //\tCallback when the page finishes opening.\n    _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].transitionend(_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.page, () => {\n        this.trigger('open:finish');\n    }, this.conf.transitionDuration);\n    //\tOpening\n    this.trigger('open:start');\n    document.documentElement.classList.add('mm-wrapper_opening');\n};\n_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.close = function () {\n    //\tInvoke \"before\" hook.\n    this.trigger('close:before');\n    if (!this.vars.opened) {\n        return;\n    }\n    //\tCallback when the page finishes closing.\n    _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].transitionend(_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.page, () => {\n        this.node.menu.classList.remove('mm-menu_opened');\n        var clsn = [\n            'mm-wrapper_opened',\n            'mm-wrapper_blocking',\n            'mm-wrapper_modal',\n            'mm-wrapper_background'\n        ];\n        document.querySelector('html').classList.remove(...clsn);\n        //\tRestore style and position\n        _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.page.setAttribute('style', _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.page['mmStyle']);\n        this.vars.opened = false;\n        this.trigger('close:finish');\n    }, this.conf.transitionDuration);\n    //\tClosing\n    this.trigger('close:start');\n    document.documentElement.classList.remove('mm-wrapper_opening');\n    //\tInvoke \"after\" hook.\n    this.trigger('close:after');\n};\n/**\n * Close all other menus.\n */\n_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.closeAllOthers = function () {\n    _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(document.body, '.mm-menu_offcanvas')\n        .forEach((menu) => {\n        if (menu !== this.node.menu) {\n            let api = menu['mmenu'];\n            if (api && api.close) {\n                api.close();\n            }\n        }\n    });\n};\n/**\n * Set the \"page\" node.\n *\n * @param {HTMLElement} page Element to set as the page.\n */\n_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.setPage = function (page) {\n    //\tInvoke \"before\" hook.\n    this.trigger('setPage:before', [page]);\n    var configs = this.conf.offCanvas;\n    //\tIf no page was specified, find it.\n    if (!page) {\n        /** Array of elements that are / could be \"the page\". */\n        let pages = (typeof configs.page.selector == 'string')\n            ? _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(document.body, configs.page.selector)\n            : _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(document.body, configs.page.nodetype);\n        //\tFilter out elements that are absolutely not \"the page\".\n        pages = pages.filter(page => !page.matches('.mm-menu, .mm-wrapper__blocker'));\n        //\tFilter out elements that are configured to not be \"the page\".\n        if (configs.page.noSelector.length) {\n            pages = pages.filter(page => !page.matches(configs.page.noSelector.join(', ')));\n        }\n        //\tWrap multiple pages in a single element.\n        if (pages.length > 1) {\n            let wrapper = _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('div');\n            pages[0].before(wrapper);\n            pages.forEach((page) => {\n                wrapper.append(page);\n            });\n            pages = [wrapper];\n        }\n        page = pages[0];\n    }\n    page.classList.add('mm-page', 'mm-slideout');\n    page.id = page.id || _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getUniqueId();\n    _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.page = page;\n    //\tInvoke \"after\" hook.\n    this.trigger('setPage:after', [page]);\n};\n/**\n * Initialize the <window>\n */\n_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype._initWindow_offCanvas = function () {\n    //\tPrevent tabbing\n    //\tBecause when tabbing outside the menu, the element that gains focus will be centered on the screen.\n    //\tIn other words: The menu would move out of view.\n    if (!_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].evnt.windowKeydownOffCanvasTab) {\n        _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].evnt.windowKeydownOffCanvasTab = (evnt) => {\n            if (document.documentElement.matches('.mm-wrapper_opened')) {\n                if (evnt.keyCode == 9) {\n                    evnt.preventDefault();\n                    return false;\n                }\n            }\n        };\n        window.addEventListener('keydown', _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].evnt.windowKeydownOffCanvasTab);\n    }\n    //\tSet \"page\" element min-height to window height\n    var oldHeight, newHeight;\n    if (!_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].evnt.resizeOffCanvas) {\n        _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].evnt.windowResizeOffCanvas = (evnt) => {\n            if (_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.page) {\n                if (document.documentElement.matches('.mm-wrapper_opening')\n                    || evnt.force) {\n                    newHeight = window.innerHeight;\n                    if (newHeight != oldHeight) {\n                        oldHeight = newHeight;\n                        _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.page.style.minHeight = newHeight + 'px';\n                    }\n                }\n            }\n        };\n        window.addEventListener('resize', _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].evnt.windowResizeOffCanvas);\n    }\n};\n/**\n * Initialize \"blocker\" node\n */\n_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype._initBlocker = function () {\n    //\tInvoke \"before\" hook.\n    this.trigger('initBlocker:before');\n    var options = this.opts.offCanvas, configs = this.conf.offCanvas;\n    if (!options.blockUI) {\n        return;\n    }\n    //\tCreate the blocker node.\n    if (!_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.blck) {\n        let blck = _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('div.mm-wrapper__blocker.mm-slideout');\n        blck.innerHTML = '<a></a>';\n        //\tAppend the blocker node to the body.\n        document.querySelector(configs.menu.insertSelector)\n            .append(blck);\n        //\tStore the blocker node.\n        _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.blck = blck;\n    }\n    //\tClose the menu when \n    //\t\t1) clicking, \n    //\t\t2) touching or \n    //\t\t3) dragging the blocker node.\n    var closeMenu = (evnt) => {\n        evnt.preventDefault();\n        evnt.stopPropagation();\n        if (!document.documentElement.matches('.mm-wrapper_modal')) {\n            this.close();\n        }\n    };\n    _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.blck.addEventListener('mousedown', closeMenu); // 1\n    _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.blck.addEventListener('touchstart', closeMenu); // 2\n    _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].node.blck.addEventListener('touchmove', closeMenu); // 3\n    //\tInvoke \"after\" hook.\n    this.trigger('initBlocker:after');\n};\n\n\n//# sourceURL=webpack:///./test/core/offcanvas/mmenu.offcanvas.js?");

/***/ }),

/***/ "./test/core/oncanvas/_configs.js":
/*!****************************************!*\
  !*** ./test/core/oncanvas/_configs.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst configs = {\n    classNames: {\n        divider: 'Divider',\n        inset: 'Inset',\n        nolistview: 'NoListview',\n        nopanel: 'NoPanel',\n        panel: 'Panel',\n        selected: 'Selected',\n        spacer: 'Spacer',\n        vertical: 'Vertical'\n    },\n    clone: false,\n    language: null,\n    openingInterval: 25,\n    panelNodetype: ['ul', 'ol', 'div'],\n    transitionDuration: 400\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (configs);\n\n\n//# sourceURL=webpack:///./test/core/oncanvas/_configs.js?");

/***/ }),

/***/ "./test/core/oncanvas/_options.js":
/*!****************************************!*\
  !*** ./test/core/oncanvas/_options.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst options = {\n    hooks: {},\n    extensions: [],\n    wrappers: [],\n    navbar: {\n        add: true,\n        title: 'Menu',\n        titleLink: 'parent'\n    },\n    onClick: {\n        close: null,\n        preventDefault: null,\n        setSelected: true\n    },\n    slidingSubmenus: true\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (options);\n\n\n//# sourceURL=webpack:///./test/core/oncanvas/_options.js?");

/***/ }),

/***/ "./test/core/oncanvas/mmenu.oncanvas.js":
/*!**********************************************!*\
  !*** ./test/core/oncanvas/mmenu.oncanvas.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Mmenu; });\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_options */ \"./test/core/oncanvas/_options.js\");\n/* harmony import */ var _configs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_configs */ \"./test/core/oncanvas/_configs.js\");\n/* harmony import */ var _translations_nl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./translations/nl */ \"./test/core/oncanvas/translations/nl.js\");\n/* harmony import */ var _translations_fa__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./translations/fa */ \"./test/core/oncanvas/translations/fa.js\");\n/* harmony import */ var _translations_de__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./translations/de */ \"./test/core/oncanvas/translations/de.js\");\n/* harmony import */ var _translations_ru__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./translations/ru */ \"./test/core/oncanvas/translations/ru.js\");\n/*!\n * mmenu.js v8.0.0\n * mmenujs.com\n *\n * Copyright (c) Fred Heusschen\n * www.frebsite.nl\n *\n * License: CC-BY-NC-4.0\n * http://creativecommons.org/licenses/by-nc/4.0/\n */\n\n\n/**\n * Class for a mobile menu.\n */\nclass Mmenu {\n    /**\n     * Create a mobile menu.\n     *\n     * @param {HTMLElement|string} \tmenu\t\t\t\t\t\tThe menu node.\n     * @param {object} \t\t\t\t[options=Mmenu.options]\t\tOptions for the menu.\n     * @param {object} \t\t\t\t[configs=Mmenu.configs]\t\tConfiguration options for the menu.\n     */\n    constructor(menu, options, configs) {\n        //\tExtend options and configuration from defaults.\n        this.opts = Mmenu.extend(options, Mmenu.options);\n        this.conf = Mmenu.extend(configs, Mmenu.configs);\n        //\tMethods to expose in the API.\n        this._api = ['bind', 'initPanels', 'openPanel', 'closePanel', 'closeAllPanels', 'setSelected'];\n        //\tStorage objects for nodes, variables, hooks, matchmedia and click handlers.\n        this.node = {};\n        this.vars = {};\n        this.hook = {};\n        this.mtch = {};\n        this.evnt = {};\n        this.clck = [];\n        //\tGet menu node from string or element.\n        this.node.menu = (typeof menu == 'string')\n            ? document.querySelector(menu)\n            : menu;\n        if (typeof this._deprecated == 'function') {\n            this._deprecated();\n        }\n        this._initWrappers();\n        this._initAddons();\n        this._initExtensions();\n        this._initHooks();\n        this._initAPI();\n        this._initMenu();\n        this._initPanels();\n        this._initOpened();\n        this._initAnchors();\n        this._initMatchMedia();\n        if (typeof this._debug == 'function') {\n            this._debug();\n        }\n        return this;\n    }\n    /**\n     * Open a panel.\n     *\n     * @param {HTMLElement} panel\t\t\t\tPanel to open.\n     * @param {boolean}\t\t[animation=true]\tWhether or not to open the panel with an animation.\n     */\n    openPanel(panel, animation) {\n        //\tInvoke \"before\" hook.\n        this.trigger('openPanel:before', [panel]);\n        //\tFind panel.\n        if (!panel) {\n            return;\n        }\n        if (!panel.matches('.mm-panel')) {\n            panel = panel.closest('.mm-panel');\n        }\n        if (!panel) {\n            return;\n        }\n        //\t/Find panel.\n        if (typeof animation != 'boolean') {\n            animation = true;\n        }\n        //\tOpen a \"vertical\" panel.\n        if (panel.parentElement.matches('.mm-listitem_vertical')) {\n            //\tOpen current and all vertical parent panels.\n            Mmenu.DOM.parents(panel, '.mm-listitem_vertical')\n                .forEach((listitem) => {\n                panel.classList.add('mm-listitem_opened');\n                Mmenu.DOM.children(listitem, '.mm-panel')\n                    .forEach((panel) => {\n                    panel.classList.remove('mm-hidden');\n                });\n            });\n            //\tOpen first non-vertical parent panel.\n            let parents = Mmenu.DOM.parents(panel, '.mm-panel')\n                .filter(panel => !panel.parentElement.matches('.mm-listitem_vertical'));\n            this.trigger('openPanel:start', [panel]);\n            if (parents.length) {\n                this.openPanel(parents[0]);\n            }\n            this.trigger('openPanel:finish', [panel]);\n            //\tOpen a \"horizontal\" panel.\n        }\n        else {\n            if (panel.matches('.mm-panel_opened')) {\n                return;\n            }\n            let panels = Mmenu.DOM.children(this.node.pnls, '.mm-panel'), current = Mmenu.DOM.children(this.node.pnls, '.mm-panel_opened')[0];\n            //\tClose all child panels.\n            panels.filter(parent => parent !== panel)\n                .forEach((parent) => {\n                parent.classList.remove('mm-panel_opened-parent');\n            });\n            //\tOpen all parent panels.\n            let parent = panel['mmParent'];\n            while (parent) {\n                parent = parent.closest('.mm-panel');\n                if (parent) {\n                    if (!parent.parentElement.matches('.mm-listitem_vertical')) {\n                        parent.classList.add('mm-panel_opened-parent');\n                    }\n                    parent = parent['mmParent'];\n                }\n            }\n            //\tAdd classes for animation.\n            panels.forEach((panel) => {\n                panel.classList.remove('mm-panel_highest');\n            });\n            panels.filter(hidden => hidden !== current)\n                .filter(hidden => hidden !== panel)\n                .forEach((hidden) => {\n                hidden.classList.add('mm-hidden');\n            });\n            panel.classList.remove('mm-hidden');\n            /**\tStart opening the panel. */\n            let openPanelStart = () => {\n                if (current) {\n                    current.classList.remove('mm-panel_opened');\n                }\n                panel.classList.add('mm-panel_opened');\n                if (panel.matches('.mm-panel_opened-parent')) {\n                    if (current) {\n                        current.classList.add('mm-panel_highest');\n                    }\n                    panel.classList.remove('mm-panel_opened-parent');\n                }\n                else {\n                    if (current) {\n                        current.classList.add('mm-panel_opened-parent');\n                    }\n                    panel.classList.add('mm-panel_highest');\n                }\n                //\tInvoke \"start\" hook.\n                this.trigger('openPanel:start', [panel]);\n            };\n            /**\tFinish opening the panel. */\n            let openPanelFinish = () => {\n                if (current) {\n                    current.classList.remove('mm-panel_highest');\n                    current.classList.add('mm-hidden');\n                }\n                panel.classList.remove('mm-panel_highest');\n                //\tInvoke \"finish\" hook.\n                this.trigger('openPanel:finish', [panel]);\n            };\n            if (animation && !panel.matches('.mm-panel_noanimation')) {\n                //\tWithout the timeout the animation will not work because the element had display: none;\n                //\tRequestAnimationFrame would be nice here.\n                setTimeout(() => {\n                    //\tCallback\n                    Mmenu.transitionend(panel, () => {\n                        openPanelFinish();\n                    }, this.conf.transitionDuration);\n                    openPanelStart();\n                }, this.conf.openingInterval);\n            }\n            else {\n                openPanelStart();\n                openPanelFinish();\n            }\n        }\n        //\tInvoke \"after\" hook.\n        this.trigger('openPanel:after', [panel]);\n    }\n    /**\n     * Close a panel.\n     *\n     * @param {HTMLElement} panel Panel to close.\n     */\n    closePanel(panel) {\n        //\tInvoke \"before\" hook.\n        this.trigger('closePanel:before', [panel]);\n        var li = panel.parentElement;\n        //\tOnly works for \"vertical\" panels.\n        if (li.matches('.mm-listitem_vertical')) {\n            li.classList.remove('mm-listitem_opened');\n            panel.classList.add('mm-hidden');\n            //\tInvoke main hook.\n            this.trigger('closePanel', [panel]);\n        }\n        //\tInvoke \"after\" hook.\n        this.trigger('closePanel:after', [panel]);\n    }\n    /**\n     * Close all opened panels.\n     *\n     * @param {HTMLElement} panel Panel to open after closing all other panels.\n     */\n    closeAllPanels(panel) {\n        //\tInvoke \"before\" hook.\n        this.trigger('closeAllPanels:before');\n        //\tClose all \"vertical\" panels.\n        let listitems = this.node.pnls.querySelectorAll('.mm-listitem');\n        listitems.forEach((listitem) => {\n            listitem.classList.remove('mm-listitem_selected', 'mm-listitem_opened');\n        });\n        //\tClose all \"horizontal\" panels.\n        var panels = Mmenu.DOM.children(this.node.pnls, '.mm-panel'), opened = (panel) ? panel : panels[0];\n        Mmenu.DOM.children(this.node.pnls, '.mm-panel')\n            .forEach((panel) => {\n            if (panel !== opened) {\n                panel.classList.remove('mm-panel_opened');\n                panel.classList.remove('mm-panel_opened-parent');\n                panel.classList.remove('mm-panel_highest');\n                panel.classList.add('mm-hidden');\n            }\n        });\n        //\tOpen first panel.\n        this.openPanel(opened, false);\n        //\tInvoke \"after\" hook.\n        this.trigger('closeAllPanels:after');\n    }\n    /**\n     * Toggle a panel opened/closed.\n     *\n     * @param {HTMLElement} panel Panel to open or close.\n     */\n    togglePanel(panel) {\n        let listitem = panel.parentElement;\n        //\tOnly works for \"vertical\" panels.\n        if (listitem.matches('.mm-listitem_vertical')) {\n            this[listitem.matches('.mm-listitem_opened') ? 'closePanel' : 'openPanel'](panel);\n        }\n    }\n    /**\n     * Display a listitem as being \"selected\".\n     *\n     * @param {HTMLElement} listitem Listitem to mark.\n     */\n    setSelected(listitem) {\n        //\tInvoke \"before\" hook.\n        this.trigger('setSelected:before', [listitem]);\n        //\tFirst, remove the selected class from all listitems.\n        Mmenu.DOM.find(this.node.menu, '.mm-listitem_selected')\n            .forEach((li) => {\n            li.classList.remove('mm-listitem_selected');\n        });\n        //\tNext, add the selected class to the provided listitem.\n        listitem.classList.add('mm-listitem_selected');\n        //\tInvoke \"after\" hook.\n        this.trigger('setSelected:after', [listitem]);\n    }\n    /**\n     * Bind a function to a hook.\n     *\n     * @param {string} \t\thook The hook.\n     * @param {function} \tfunc The function.\n     */\n    bind(hook, func) {\n        //\tCreate an array for the hook if it does not yet excist.\n        this.hook[hook] = this.hook[hook] || [];\n        //\tPush the function to the array.\n        this.hook[hook].push(func);\n    }\n    /**\n     * Invoke the functions bound to a hook.\n     *\n     * @param {string} \thook  \tThe hook.\n     * @param {array}\t[args] \tArguments for the function.\n     */\n    trigger(hook, args) {\n        if (this.hook[hook]) {\n            for (var h = 0, l = this.hook[hook].length; h < l; h++) {\n                this.hook[hook][h].apply(this, args);\n            }\n        }\n    }\n    /**\n     * Bind functions to a matchMedia listener.\n     *\n     * @param {string} \t\tmediaquery \tMedia query to match.\n     * @param {function} \tyes \t\tFunction to invoke when the media query matches.\n     * @param {function} \tno \t\t\tFunction to invoke when the media query doesn't match.\n     */\n    matchMedia(mediaquery, yes, no) {\n        this.mtch[mediaquery] = this.mtch[mediaquery] || [];\n        this.mtch[mediaquery].push({\n            'yes': yes,\n            'no': no\n        });\n    }\n    /**\n     * Initialize the matchMedia listener.\n     */\n    _initMatchMedia() {\n        for (var mediaquery in this.mtch) {\n            let mqstring = mediaquery, mqlist = window.matchMedia(mqstring);\n            this._fireMatchMedia(mqstring, mqlist);\n            mqlist.addListener((mqlist) => {\n                this._fireMatchMedia(mqstring, mqlist);\n            });\n        }\n    }\n    /**\n     * Fire the \"yes\" or \"no\" function for a matchMedia listener.\n     *\n     * @param {string} \t\t\tmqstring \tMedia query to check for.\n     * @param {MediaQueryList} \tmqlist \t\tMedia query list to check with.\n     */\n    _fireMatchMedia(mqstring, mqlist) {\n        var fn = mqlist.matches ? 'yes' : 'no';\n        for (let m = 0; m < this.mtch[mqstring].length; m++) {\n            this.mtch[mqstring][m][fn].call(this);\n        }\n    }\n    /**\n     * Create the API.\n     */\n    _initAPI() {\n        //\tWe need this=that because:\n        //\t1) the \"arguments\" object can not be referenced in an arrow function in ES3 and ES5.\n        var that = this;\n        this.API = {};\n        this._api.forEach((fn) => {\n            this.API[fn] = function () {\n                var re = that[fn].apply(that, arguments); // 1)\n                return (typeof re == 'undefined') ? that.API : re;\n            };\n        });\n        //\tStore the API in the HTML node for external usage.\n        this.node.menu['mmenu'] = this.API;\n    }\n    /**\n     * Bind the hooks specified in the options.\n     */\n    _initHooks() {\n        for (let hook in this.opts.hooks) {\n            this.bind(hook, this.opts.hooks[hook]);\n        }\n    }\n    /**\n     * Initialize the wrappers specified in the options.\n     */\n    _initWrappers() {\n        //\tInvoke \"before\" hook.\n        this.trigger('initWrappers:before');\n        for (let w = 0; w < this.opts.wrappers.length; w++) {\n            Mmenu.wrappers[this.opts.wrappers[w]].call(this);\n        }\n        //\tInvoke \"after\" hook.\n        this.trigger('initWrappers:after');\n    }\n    /**\n     * Initialize all available add-ons.\n     */\n    _initAddons() {\n        //\tInvoke \"before\" hook.\n        this.trigger('initAddons:before');\n        for (let addon in Mmenu.addons) {\n            Mmenu.addons[addon].call(this);\n        }\n        //\tInvoke \"after\" hook.\n        this.trigger('initAddons:after');\n    }\n    /**\n     * Initialize the extensions specified in the options.\n     */\n    _initExtensions() {\n        //\tInvoke \"before\" hook.\n        this.trigger('initExtensions:before');\n        //\tConvert array to object with array.\n        if (Mmenu.typeof(this.opts.extensions) == 'array') {\n            this.opts.extensions = {\n                'all': this.opts.extensions\n            };\n        }\n        //\tLoop over object.\n        for (let mediaquery in this.opts.extensions) {\n            this.opts.extensions[mediaquery] = this.opts['extensions'][mediaquery].length ? 'mm-menu_' + this.opts['extensions'][mediaquery].join(' mm-menu_') : '';\n            if (this.opts.extensions[mediaquery]) {\n                this.matchMedia(mediaquery, () => {\n                    this.node.menu.classList.add(this.opts.extensions[mediaquery]);\n                }, () => {\n                    this.node.menu.classList.remove(this.opts.extensions[mediaquery]);\n                });\n            }\n        }\n        //\tInvoke \"after\" hook.\n        this.trigger('initExtensions:after');\n    }\n    /**\n     * Initialize the menu.\n     */\n    _initMenu() {\n        //\tInvoke \"before\" hook.\n        this.trigger('initMenu:before');\n        //\tAdd an ID to the menu if it does not yet have one.\n        this.node.menu.id = this.node.menu.id || Mmenu.getUniqueId();\n        //\tStore the original menu ID.\n        this.vars.orgMenuId = this.node.menu.id;\n        //\tClone if needed.\n        if (this.conf.clone) {\n            //\tStore the original menu.\n            this.node.orig = this.node.menu;\n            //\tClone the original menu and store it.\n            this.node.menu = this.node.orig.cloneNode(true);\n            //\tPrefix all ID's in the cloned menu.\n            this.node.menu.id = 'mm-' + this.node.menu.id;\n            Mmenu.DOM.find(this.node.menu, '[id]')\n                .forEach((elem) => {\n                elem.id = 'mm-' + elem.id;\n            });\n        }\n        //\tWrap the panels in a node.\n        let panels = Mmenu.DOM.create('div.mm-panels');\n        Mmenu.DOM.children(this.node.menu)\n            .forEach((panel) => {\n            if (this.conf.panelNodetype.indexOf(panel.nodeName.toLowerCase()) > -1) {\n                panels.append(panel);\n            }\n        });\n        this.node.menu.append(panels);\n        this.node.pnls = panels;\n        //\tAdd class to the menu.\n        this.node.menu.classList.add('mm-menu');\n        //\tAdd class to the wrapper.\n        this.node.menu.parentElement.classList.add('mm-wrapper');\n        //\tInvoke \"after\" hook.\n        this.trigger('initMenu:after');\n    }\n    /**\n     * Initialize panels.\n     *\n     * @param {array} [panels] Panels to initialize.\n     */\n    _initPanels(panels) {\n        //\tOpen / close panels.\n        this.clck.push((anchor, args) => {\n            if (args.inMenu) {\n                var href = anchor.getAttribute('href');\n                if (href && href.length > 1 && href.slice(0, 1) == '#') {\n                    try {\n                        let panel = Mmenu.DOM.find(this.node.menu, href)[0];\n                        if (panel && panel.matches('.mm-panel')) {\n                            if (anchor.parentElement.matches('.mm-listitem_vertical')) {\n                                this.togglePanel(panel);\n                            }\n                            else {\n                                this.openPanel(panel);\n                            }\n                            return true;\n                        }\n                    }\n                    catch (err) { }\n                }\n            }\n        });\n        //\tActually initialise the panels\n        this.initPanels(panels);\n    }\n    /**\n     * Initialize panels.\n     *\n     * @param {array} [panels] The panels to initialize.\n     */\n    initPanels(panels) {\n        //\tInvoke \"before\" hook.\n        this.trigger('initPanels:before', [panels]);\n        var panelNodetype = this.conf.panelNodetype.join(', ');\n        //\tIf no panels provided, use all panels.\n        panels = panels || Mmenu.DOM.children(this.node.pnls, panelNodetype);\n        var newpanels = [];\n        var init = (panels) => {\n            panels.filter(panel => panel.matches(panelNodetype))\n                .forEach((panel) => {\n                var panel = this._initPanel(panel);\n                if (panel) {\n                    this._initNavbar(panel);\n                    this._initListview(panel);\n                    newpanels.push(panel);\n                    //\tInit subpanels.\n                    var children = [];\n                    //\tFind panel > panel\n                    children.push(...Mmenu.DOM.children(panel, '.' + this.conf.classNames.panel));\n                    //\tFind panel listitem > panel\n                    Mmenu.DOM.children(panel, '.mm-listview')\n                        .forEach((listview) => {\n                        Mmenu.DOM.children(listview, '.mm-listitem')\n                            .forEach((listitem) => {\n                            children.push(...Mmenu.DOM.children(listitem, panelNodetype));\n                        });\n                    });\n                    if (children.length) {\n                        init(children);\n                    }\n                }\n            });\n        };\n        init(panels);\n        //\tInvoke \"after\" hook.\n        this.trigger('initPanels:after', [newpanels]);\n    }\n    /**\n     * Initialize a single panel.\n     *\n     * @param  {HTMLElement} \t\tpanel \tPanel to initialize.\n     * @return {HTMLElement|null} \t\t\tInitialized panel.\n     */\n    _initPanel(panel) {\n        //\tInvoke \"before\" hook.\n        this.trigger('initPanel:before', [panel]);\n        //\tStop if already a panel.\n        if (panel.matches('.mm-panel')) {\n            return panel;\n        }\n        //\tRefactor panel classnames\n        Mmenu.refactorClass(panel, this.conf.classNames.panel, 'mm-panel');\n        Mmenu.refactorClass(panel, this.conf.classNames.nopanel, 'mm-nopanel');\n        Mmenu.refactorClass(panel, this.conf.classNames.inset, 'mm-listview_inset');\n        if (panel.matches('.mm-listview_inset')) {\n            panel.classList.add('mm-nopanel');\n        }\n        //\tStop if not supposed to be a panel.\n        if (panel.matches('.mm-nopanel')) {\n            return null;\n        }\n        //\tWrap UL/OL in DIV\n        var vertical = (panel.matches('.' + this.conf.classNames.vertical) || !this.opts.slidingSubmenus);\n        panel.classList.remove(this.conf.classNames.vertical);\n        var id = panel.id || Mmenu.getUniqueId();\n        if (panel.matches('ul, ol')) {\n            panel.removeAttribute('id');\n            let wrapper = Mmenu.DOM.create('div');\n            panel.before(wrapper);\n            wrapper.append(panel);\n            panel = wrapper;\n        }\n        panel.id = id;\n        panel.classList.add('mm-panel', 'mm-hidden');\n        var parent = [panel.parentElement].filter(listitem => listitem.matches('li'))[0];\n        if (vertical) {\n            if (parent) {\n                parent.classList.add('mm-listitem_vertical');\n            }\n        }\n        else {\n            this.node.pnls.append(panel);\n        }\n        //\tStore parent/child relation\n        if (parent) {\n            parent['mmChild'] = panel;\n            panel['mmParent'] = parent;\n        }\n        //\tInvoke \"after\" hook.\n        this.trigger('initPanel:after', [panel]);\n        return panel;\n    }\n    /**\n     * Initialize a navbar.\n     *\n     * @param {HTMLElement} panel Panel for the navbar.\n     */\n    _initNavbar(panel) {\n        //\tInvoke \"before\" hook.\n        this.trigger('initNavbar:before', [panel]);\n        if (Mmenu.DOM.children(panel, '.mm-navbar').length) {\n            return;\n        }\n        var parent = panel['mmParent'], navbar = Mmenu.DOM.create('div.mm-navbar');\n        var title = this._getPanelTitle(panel, this.opts.navbar.title), href = '';\n        if (parent) {\n            if (parent.matches('.mm-listitem_vertical')) {\n                return;\n            }\n            let opener;\n            //\tListview, the panel wrapping this panel\n            if (parent.matches('.mm-listitem')) {\n                opener = Mmenu.DOM.children(parent, '.mm-listitem__text')[0];\n                //\tNon-listview, the first anchor in the parent panel that links to this panel\n            }\n            else {\n                opener = panel.closest('.mm-panel');\n                opener = Mmenu.DOM.find(opener, 'a[href=\"#' + panel.id + '\"]')[0];\n            }\n            let id = opener.closest('.mm-panel').id;\n            title = this._getPanelTitle(panel, opener.textContent);\n            switch (this.opts.navbar.titleLink) {\n                case 'anchor':\n                    href = opener.getAttribute('href');\n                    break;\n                case 'parent':\n                    href = '#' + id;\n                    break;\n            }\n            let anchor = Mmenu.DOM.create('a.mm-btn.mm-btn_prev.mm-navbar__btn');\n            anchor.setAttribute('href', '#' + id);\n            navbar.append(anchor);\n        }\n        else if (!this.opts.navbar.title) {\n            return;\n        }\n        if (this.opts.navbar.add) {\n            panel.classList.add('mm-panel_has-navbar');\n        }\n        let anchor = Mmenu.DOM.create('a.mm-navbar__title');\n        anchor.innerHTML = title;\n        if (href) {\n            anchor.setAttribute('href', href);\n        }\n        navbar.append(anchor);\n        panel.prepend(navbar);\n        //\tInvoke \"after\" hook.\n        this.trigger('initNavbar:after', [panel]);\n    }\n    /**\n     * Initialize a listview.\n     *\n     * @param {HTMLElement} panel Panel for the listview(s).\n     */\n    _initListview(panel) {\n        //\tInvoke \"before\" hook.\n        this.trigger('initListview:before', [panel]);\n        //\tRefactor listviews classnames.\n        var filter = 'ul, ol', listviews = Mmenu.DOM.children(panel, filter);\n        if (panel.matches(filter)) {\n            listviews.unshift(panel);\n        }\n        listviews.forEach((listview) => {\n            Mmenu.refactorClass(listview, this.conf.classNames.nolistview, 'mm-nolistview');\n        });\n        var listitems = [];\n        //\tRefactor listitems classnames\n        listviews.forEach((listview) => {\n            if (!listview.matches('.mm-nolistview')) {\n                listview.classList.add('mm-listview');\n                Mmenu.DOM.children(listview)\n                    .forEach((listitem) => {\n                    listitem.classList.add('mm-listitem');\n                    Mmenu.refactorClass(listitem, this.conf.classNames.selected, 'mm-listitem_selected');\n                    Mmenu.refactorClass(listitem, this.conf.classNames.divider, 'mm-listitem_divider');\n                    Mmenu.refactorClass(listitem, this.conf.classNames.spacer, 'mm-listitem_spacer');\n                    Mmenu.DOM.children(listitem, 'a, span')\n                        .forEach((item) => {\n                        if (!item.matches('.mm-btn')) {\n                            item.classList.add('mm-listitem__text');\n                        }\n                    });\n                });\n            }\n        });\n        //\tAdd open link to parent listitem\n        var parent = panel['mmParent'];\n        if (parent && parent.matches('.mm-listitem')) {\n            if (!Mmenu.DOM.children(parent, '.mm-btn').length) {\n                let item = Mmenu.DOM.children(parent, 'a, span')[0];\n                if (item) {\n                    let button = Mmenu.DOM.create('a.mm-btn.mm-btn_next.mm-listitem__btn');\n                    button.setAttribute('href', '#' + panel.id);\n                    item.parentElement.insertBefore(button, item.nextSibling);\n                    if (item.matches('span')) {\n                        button.classList.add('mm-listitem__text');\n                        button.innerHTML = item.innerHTML;\n                        item.remove();\n                    }\n                }\n            }\n        }\n        //\tInvoke \"after\" hook.\n        this.trigger('initListview:after', [panel]);\n    }\n    /**\n     * Find and open the correct panel after creating the menu.\n     */\n    _initOpened() {\n        //\tInvoke \"before\" hook.\n        this.trigger('initOpened:before');\n        //\tFind all selected listitems.\n        let listitems = this.node.pnls.querySelectorAll('.mm-listitem_selected');\n        //\tDeselect the listitems.\n        let lastitem = null;\n        listitems.forEach((listitem) => {\n            lastitem = listitem;\n            listitem.classList.remove('mm-listitem_selected');\n        });\n        if (lastitem) {\n            lastitem.classList.add('mm-listitem_selected');\n        }\n        //\tFind the current opened panel.\n        let current = (lastitem)\n            ? lastitem.closest('.mm-panel')\n            : Mmenu.DOM.children(this.node.pnls, '.mm-panel')[0];\n        //\tOpen the current opened panel.\n        this.openPanel(current, false);\n        //\tInvoke \"after\" hook.\n        this.trigger('initOpened:after');\n    }\n    /**\n     * Initialize anchors in / for the menu.\n     */\n    _initAnchors() {\n        //\tInvoke \"before\" hook.\n        this.trigger('initAnchors:before');\n        document.body.addEventListener('click', (evnt) => {\n            var target = evnt.target;\n            if (!target.matches('a[href]')) {\n                target = target.closest('a[href]');\n                if (!target) {\n                    return;\n                }\n            }\n            var args = {\n                inMenu: target.closest('.mm-menu') === this.node.menu,\n                inListview: target.matches('.mm-listitem > a'),\n                toExternal: target.matches('[rel=\"external\"]') || target.matches('[target=\"_blank\"]')\n            };\n            var onClick = {\n                close: null,\n                setSelected: null,\n                preventDefault: target.getAttribute('href').slice(0, 1) == '#'\n            };\n            //\tFind hooked behavior.\n            for (let c = 0; c < this.clck.length; c++) {\n                let click = this.clck[c].call(this, target, args);\n                if (click) {\n                    if (Mmenu.typeof(click) == 'boolean') {\n                        evnt.preventDefault();\n                        return;\n                    }\n                    if (Mmenu.typeof(click) == 'object') {\n                        onClick = Mmenu.extend(click, onClick);\n                    }\n                }\n            }\n            //\tDefault behavior for anchors in lists.\n            if (args.inMenu && args.inListview && !args.toExternal) {\n                //\tSet selected item, Default: true\n                if (Mmenu.valueOrFn(target, this.opts.onClick.setSelected, onClick.setSelected)) {\n                    this.setSelected(target.parentElement);\n                }\n                //\tPrevent default / don't follow link. Default: false.\n                if (Mmenu.valueOrFn(target, this.opts.onClick.preventDefault, onClick.preventDefault)) {\n                    evnt.preventDefault();\n                }\n                //\tClose menu. Default: false\n                //\t\tTODO: option + code should be in offcanvas add-on\n                if (Mmenu.valueOrFn(target, this.opts.onClick.close, onClick.close)) {\n                    if (this.opts.offCanvas && typeof this.close == 'function') {\n                        this.close();\n                    }\n                }\n            }\n        });\n        //\tInvoke \"after\" hook.\n        this.trigger('initAnchors:after');\n    }\n    //\tTODO: interface that tells what will be returned based on input\n    /**\n     * Get the translation for a text.\n     *\n     * @param  {string} text \tText to translate.\n     * @return {string}\t\t\tThe translated text.\n     */\n    i18n(text) {\n        return Mmenu.i18n(text, this.conf.language);\n    }\n    /**\n     * Find the title for a panel.\n     *\n     * @param \t{HTMLElement}\t\t\tpanel \t\tPanel to search in.\n     * @param \t{string|Function} \t\t[dfault] \tFallback/default title.\n     * @return\t{string}\t\t\t\t\t\t\tThe title for the panel.\n     */\n    _getPanelTitle(panel, dfault) {\n        var title;\n        //\tFunction\n        if (typeof this.opts.navbar.title == 'function') {\n            title = this.opts.navbar.title.call(panel);\n        }\n        //\tData attr\n        if (typeof title == 'undefined') {\n            title = panel.getAttribute('mm-data-title');\n        }\n        if (typeof title == 'string' && title.length) {\n            return title;\n        }\n        //\tFallback\n        if (typeof dfault == 'string') {\n            return this.i18n(dfault);\n        }\n        else if (typeof dfault == 'function') {\n            return this.i18n(dfault.call(panel));\n        }\n        //\tDefault\n        if (typeof Mmenu.options.navbar.title == 'string') {\n            return this.i18n(Mmenu.options.navbar.title);\n        }\n        return this.i18n('Menu');\n    }\n    /**\n     * Find the value from an option or function.\n     *\n     * @param \t{HTMLElement} \telement \tScope for the function.\n     * @param \t{any} \t\t\t[option] \tValue or function.\n     * @param \t{any} \t\t\t[dfault] \tDefault fallback value.\n     * @return\t{any}\t\t\t\t\t\tThe given evaluation of the given option, or the default fallback value.\n     */\n    static valueOrFn(element, option, dfault) {\n        if (typeof option == 'function') {\n            var value = option.call(element);\n            if (typeof value != 'undefined') {\n                return value;\n            }\n        }\n        if ((typeof option == 'function' || typeof option == 'undefined')\n            && typeof dfault != 'undefined') {\n            return dfault;\n        }\n        return option;\n    }\n    /**\n     * Refactor a classname on multiple elements.\n     *\n     * @param {HTMLElement} element \tElement to refactor.\n     * @param {string}\t\toldClass \tClassname to remove.\n     * @param {string}\t\tnewClass \tClassname to add.\n     */\n    static refactorClass(element, oldClass, newClass) {\n        if (element.matches('.' + oldClass)) {\n            element.classList.remove(oldClass);\n            element.classList.add(newClass);\n        }\n    }\n    /**\n     * Filter out non-listitem listitems.\n     *\n     * @param  {array} listitems \tElements to filter.\n     * @return {array}\t\t\t\tThe filtered set of listitems.\n     */\n    static filterListItems(listitems) {\n        return listitems\n            .filter(listitem => !listitem.matches('.mm-listitem_divider'))\n            .filter(listitem => !listitem.matches('.mm-hidden'));\n    }\n    /**\n     * Find anchors in listitems (excluding anchor that open a sub-panel).\n     *\n     * @param  {array} \tlistitems \tElements to filter.\n     * @return {array}\t\t\t\tThe found set of anchors.\n     */\n    static filterListItemAnchors(listitems) {\n        var anchors = [];\n        Mmenu.filterListItems(listitems)\n            .forEach((listitem) => {\n            anchors.push(...Mmenu.DOM.children(listitem, 'a.mm-listitem__text'));\n        });\n        return anchors.filter(anchor => !anchor.matches('.mm-btn_next'));\n    }\n    /**\n     * Set and invoke a (single) transition-end function with fallback.\n     *\n     * @param {HTMLElement} \teelement \tScope for the function.\n     * @param {function}\t\tfunc\t\tFunction to invoke.\n     * @param {number}\t\t\tduration\tThe duration of the animation (for the fallback).\n     */\n    static transitionend(element, func, duration) {\n        var guid = Mmenu.getUniqueId();\n        var _ended = false, _fn = function (evnt) {\n            if (typeof evnt !== 'undefined') {\n                if (evnt.target !== element) {\n                    return;\n                }\n            }\n            if (!_ended) {\n                element.removeEventListener('transitionend', _fn);\n                element.removeEventListener('webkitTransitionEnd', _fn);\n                func.call(element);\n            }\n            _ended = true;\n        };\n        element.addEventListener('transitionend', _fn);\n        element.addEventListener('webkitTransitionEnd', _fn);\n        setTimeout(_fn, duration * 1.1);\n    }\n    /**\n     * Get the type of any given variable. Improvement of \"typeof\".\n     *\n     * @param \t{any}\t\tvariable\tThe variable.\n     * @return\t{string}\t\t\t\tThe type of the variable in lowercase.\n     */\n    static typeof(variable) {\n        return ({}).toString.call(variable).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n    }\n    /**\n     * Deep extend an object with the given defaults.\n     * Note that the extended object is not a clone, meaning the original object will also be updated.\n     *\n     * @param \t{object}\torignl\tThe object to extend to.\n     * @param \t{object}\tdfault\tThe object to extend from.\n     * @return\t{object}\t\t\tThe extended \"orignl\" object.\n     */\n    static extend(orignl, //\tUnfortunately, Typescript doesn't allow \"object\", \"mmLooseObject\" or anything other than \"any\".\n    dfault) {\n        if (Mmenu.typeof(orignl) != 'object') {\n            orignl = {};\n        }\n        if (Mmenu.typeof(dfault) != 'object') {\n            dfault = {};\n        }\n        for (let k in dfault) {\n            if (!dfault.hasOwnProperty(k)) {\n                continue;\n            }\n            if (typeof orignl[k] == 'undefined') {\n                orignl[k] = dfault[k];\n            }\n            else if (Mmenu.typeof(orignl[k]) == 'object') {\n                Mmenu.extend(orignl[k], dfault[k]);\n            }\n        }\n        return orignl;\n    }\n}\n/**\tPlugin version. */\nMmenu.version = '8.0.0';\n/**\tDefault options for menus. */\nMmenu.options = _options__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n/**\tDefault configuration for menus. */\nMmenu.configs = _configs__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n/**\tAvailable add-ons for the plugin. */\nMmenu.addons = {};\n/** Available wrappers for the plugin. */\nMmenu.wrappers = {};\n/**\tGlobally used HTML elements. */\nMmenu.node = {};\n/** Globally used EventListeners. */\nMmenu.evnt = {};\n/**\tFeatures supported by the browser. */\nMmenu.support = {\n    touch: 'ontouchstart' in window || (navigator.msMaxTouchPoints ? true : false) || false\n};\n//\tTODO: interface that tells what will be returned based on input\n/**\n * get or set a translated / translatable text.\n *\n * @param  {string|object} \t[text] \t\tThe translated text to add or get.\n * @param  {string} \t\t[language] \tThe language for the translated text.\n * @return {string|object}\t\t\t\tThe translated text.\n */\nMmenu.i18n = (function () {\n    var translations = {};\n    return (text, language) => {\n        switch (Mmenu.typeof(text)) {\n            case 'object':\n                if (typeof language == 'string') {\n                    if (typeof translations[language] == 'undefined') {\n                        translations[language] = {};\n                    }\n                    Mmenu.extend(translations[language], text);\n                }\n                return translations;\n            case 'string':\n                if (typeof language == 'string' &&\n                    Mmenu.typeof(translations[language]) == 'object') {\n                    return translations[language][text] || text;\n                }\n                return text;\n            case 'undefined':\n            default:\n                return translations;\n        }\n    };\n})();\n/** Set of DOM-traversing, -manupulation and -measuring methods. */\nMmenu.DOM = {\n    /**\n     * Create an element with classname.\n     *\n     * @param \t{string}\t\tselector\tThe nodeName and classnames for the element to create.\n     * @return\t{HTMLElement}\t\t\t\tThe created element.\n     */\n    create: (selector) => {\n        var elem;\n        selector.split('.').forEach((arg, a) => {\n            if (a == 0) {\n                elem = document.createElement(arg);\n            }\n            else {\n                elem.classList.add(arg);\n            }\n        });\n        return elem;\n    },\n    /**\n     * Find all elements matching the selector.\n     * Basically the same as element.querySelectorAll() but it returns an actuall array.\n     *\n     * @param \t{HTMLElement} \telement Element to search in.\n     * @param \t{string}\t\tfilter\tThe filter to match.\n     * @return\t{array}\t\t\t\t\tArray of elements that match the filter.\n     */\n    find: (element, filter) => {\n        return Array.prototype.slice.call(element.querySelectorAll(filter));\n    },\n    /**\n     * Find all child elements matching the (optional) selector.\n     *\n     * @param \t{HTMLElement} \telement Element to search in.\n     * @param \t{string}\t\tfilter\tThe filter to match.\n     * @return\t{array}\t\t\t\t\tArray of child elements that match the filter.\n     */\n    children: (element, filter) => {\n        var children = Array.prototype.slice.call(element.children);\n        return filter\n            ? children.filter(child => child.matches(filter))\n            : children;\n    },\n    /**\n     * Find all preceding elements matching the selector.\n     *\n     * @param \t{HTMLElement} \telement Element to start searching from.\n     * @param \t{string}\t\tfilter\tThe filter to match.\n     * @return\t{array}\t\t\t\t\tArray of preceding elements that match the selector.\n     */\n    parents: (element, filter) => {\n        /** Array of preceding elements that match the selector. */\n        var parents = [];\n        /** Array of preceding elements that match the selector. */\n        var parent = element.parentElement;\n        while (parent) {\n            parents.push(parent);\n            parent = parent.parentElement;\n        }\n        return filter\n            ? parents.filter(parent => parent.matches(filter))\n            : parents;\n    },\n    /**\n     * Find all previous siblings matching the selecotr.\n     *\n     * @param \t{HTMLElement} \telement Element to start searching from.\n     * @param \t{string}\t\tfilter\tThe filter to match.\n     * @return\t{array}\t\t\t\t\tArray of previous siblings that match the selector.\n     */\n    prevAll: (element, filter) => {\n        /** Array of previous siblings that match the selector. */\n        var previous = [];\n        /** Current element in the loop */\n        var current = element.previousElementSibling;\n        while (current) {\n            if (!filter || current.matches(filter)) {\n                previous.push(current);\n            }\n            current = current.previousElementSibling;\n        }\n        return previous;\n    },\n    /**\n     * Get an element offset relative to the document.\n     *\n     * @param \t{HTMLElement}\t element \t\t\tElement to start measuring from.\n     * @param \t{string}\t\t [direction=top] \tOffset top or left.\n     * @return\t{number}\t\t\t\t\t\t\tThe element offset relative to the document.\n     */\n    offset: (element, direction) => {\n        return element.getBoundingClientRect()[direction] + document.body[(direction === 'left') ? 'scrollLeft' : 'scrollTop'];\n    }\n};\n/**\n * Get an unique ID.\n *\n * @return {string} An unique ID.\n */\nMmenu.getUniqueId = (() => {\n    var id = 0;\n    //\tUsing a factory for the \"id\" local var.\n    return () => {\n        return 'mm-' + id++;\n    };\n})();\n\n\n\n\nMmenu.i18n(_translations_nl__WEBPACK_IMPORTED_MODULE_2__[\"default\"], 'nl');\nMmenu.i18n(_translations_fa__WEBPACK_IMPORTED_MODULE_3__[\"default\"], 'fa');\nMmenu.i18n(_translations_de__WEBPACK_IMPORTED_MODULE_4__[\"default\"], 'de');\nMmenu.i18n(_translations_ru__WEBPACK_IMPORTED_MODULE_5__[\"default\"], 'ru');\n\n\n//# sourceURL=webpack:///./test/core/oncanvas/mmenu.oncanvas.js?");

/***/ }),

/***/ "./test/core/oncanvas/translations/de.js":
/*!***********************************************!*\
  !*** ./test/core/oncanvas/translations/de.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    'Menu': 'Menü'\n});\n\n\n//# sourceURL=webpack:///./test/core/oncanvas/translations/de.js?");

/***/ }),

/***/ "./test/core/oncanvas/translations/fa.js":
/*!***********************************************!*\
  !*** ./test/core/oncanvas/translations/fa.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    'Menu': 'منو'\n});\n\n\n//# sourceURL=webpack:///./test/core/oncanvas/translations/fa.js?");

/***/ }),

/***/ "./test/core/oncanvas/translations/nl.js":
/*!***********************************************!*\
  !*** ./test/core/oncanvas/translations/nl.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    'Menu': 'Menu'\n});\n\n\n//# sourceURL=webpack:///./test/core/oncanvas/translations/nl.js?");

/***/ }),

/***/ "./test/core/oncanvas/translations/ru.js":
/*!***********************************************!*\
  !*** ./test/core/oncanvas/translations/ru.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    'Menu': 'Меню'\n});\n\n\n//# sourceURL=webpack:///./test/core/oncanvas/translations/ru.js?");

/***/ }),

/***/ "./test/core/screenreader/_configs.js":
/*!********************************************!*\
  !*** ./test/core/screenreader/_configs.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst configs = {\n    text: {\n        closeMenu: 'Close menu',\n        closeSubmenu: 'Close submenu',\n        openSubmenu: 'Open submenu',\n        toggleSubmenu: 'Toggle submenu'\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (configs);\n\n\n//# sourceURL=webpack:///./test/core/screenreader/_configs.js?");

/***/ }),

/***/ "./test/core/screenreader/_options.js":
/*!********************************************!*\
  !*** ./test/core/screenreader/_options.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst options = {\n    aria: true,\n    text: true\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (options);\n\n\n//# sourceURL=webpack:///./test/core/screenreader/_options.js?");

/***/ }),

/***/ "./test/core/screenreader/mmenu.screenreader.js":
/*!******************************************************!*\
  !*** ./test/core/screenreader/mmenu.screenreader.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_options */ \"./test/core/screenreader/_options.js\");\n/* harmony import */ var _configs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_configs */ \"./test/core/screenreader/_configs.js\");\n\n\n\n_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.screenReader = _options__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].configs.screenReader = _configs__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    var options = this.opts.screenReader, configs = this.conf.screenReader;\n    //\tExtend shorthand options\n    if (typeof options == 'boolean') {\n        options = {\n            aria: options,\n            text: options\n        };\n    }\n    if (typeof options != 'object') {\n        options = {};\n    }\n    //\t/Extend shorthand options\n    this.opts.screenReader = _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].extend(options, _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.screenReader);\n    //\tAdd Aria-* attributes\n    if (options.aria) {\n        //\tAdd screenreader / aria hooks for add-ons\n        //\tIn orde to keep this list short, only extend hooks that are actually used by other add-ons\n        //\tTODO: move to the specific add-on\n        //\tTODO arguments[ 0 ]?\n        this.bind('initAddons:after', () => {\n            this.bind('initMenu:after', function () { this.trigger('initMenu:after:sr-aria', [].slice.call(arguments)); });\n            this.bind('initNavbar:after', function () { this.trigger('initNavbar:after:sr-aria', [].slice.call(arguments)); });\n            this.bind('openPanel:start', function () { this.trigger('openPanel:start:sr-aria', [].slice.call(arguments)); });\n            this.bind('close:start', function () { this.trigger('close:start:sr-aria', [].slice.call(arguments)); });\n            this.bind('close:finish', function () { this.trigger('close:finish:sr-aria', [].slice.call(arguments)); });\n            this.bind('open:start', function () { this.trigger('open:start:sr-aria', [].slice.call(arguments)); });\n            this.bind('initOpened:after', function () { this.trigger('initOpened:after:sr-aria', [].slice.call(arguments)); });\n        });\n        //\tUpdate aria-hidden for hidden / visible listitems\n        this.bind('updateListview', () => {\n            this.node.pnls.querySelectorAll('.mm-listitem')\n                .forEach((listitem) => {\n                _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_aria(listitem, 'hidden', listitem.matches('.mm-hidden'));\n            });\n        });\n        //\tUpdate aria-hidden for the panels when opening and closing a panel.\n        this.bind('openPanel:start', (panel) => {\n            /** Panels that should be considered \"hidden\". */\n            var hidden = _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(this.node.pnls, '.mm-panel')\n                .filter(hide => hide !== panel)\n                .filter(hide => !hide.parentElement.matches('.mm-panel'));\n            /** Panels that should be considered \"visible\". */\n            var visible = [panel];\n            _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(panel, '.mm-listitem_vertical .mm-listitem_opened')\n                .forEach((listitem) => {\n                visible.push(..._oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(listitem, '.mm-panel'));\n            });\n            //\tSet the panels to be considered \"hidden\" or \"visible\".\n            hidden.forEach((panel) => {\n                _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_aria(panel, 'hidden', true);\n            });\n            visible.forEach((panel) => {\n                _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_aria(panel, 'hidden', false);\n            });\n        });\n        this.bind('closePanel', (panel) => {\n            _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_aria(panel, 'hidden', true);\n        });\n        //\tAdd aria-haspopup and aria-owns to prev- and next buttons.\n        this.bind('initPanels:after', (panels) => {\n            panels.forEach((panel) => {\n                _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(panel, '.mm-btn')\n                    .forEach((button) => {\n                    _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_aria(button, 'owns', button.getAttribute('href').replace('#', ''));\n                    _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_aria(button, 'haspopup', true);\n                });\n            });\n        });\n        //\tAdd aria-hidden for navbars in panels.\n        this.bind('initNavbar:after', (panel) => {\n            /** The navbar in the panel. */\n            var navbar = _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(panel, '.mm-navbar')[0];\n            /** Whether or not the navbar should be considered \"hidden\". */\n            var hidden = !panel.matches('.mm-panel_has-navbar');\n            //\tSet the navbar to be considered \"hidden\" or \"visible\".\n            _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_aria(navbar, 'hidden', hidden);\n        });\n        //\tText\n        if (options.text) {\n            //\tAdd aria-hidden to titles in navbars\n            if (this.opts.navbar.titleLink == 'parent') {\n                this.bind('initNavbar:after', (panel) => {\n                    /** The navbar in the panel. */\n                    var navbar = _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(panel, '.mm-navbar')[0];\n                    /** Whether or not the navbar should be considered \"hidden\". */\n                    var hidden = navbar.querySelector('.mm-btn_prev') ? true : false;\n                    //\tSet the navbar-title to be considered \"hidden\" or \"visible\".\n                    _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_aria(_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(navbar, '.mm-navbar__title')[0], 'hidden', hidden);\n                });\n            }\n        }\n    }\n    //\tAdd screenreader text\n    if (options.text) {\n        //\tAdd screenreader / text hooks for add-ons\n        //\tIn orde to keep this list short, only extend hooks that are actually used by other add-ons\n        //\tTODO: move to specific add-on\n        this.bind('initAddons:after', () => {\n            this.bind('setPage:after', function () { this.trigger('setPage:after:sr-text', arguments[0]); });\n            this.bind('initBlocker:after', function () { this.trigger('initBlocker:after:sr-text'); });\n        });\n        //\tAdd text to the prev-buttons.\n        this.bind('initNavbar:after', (panel) => {\n            let navbar = _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(panel, '.mm-navbar')[0];\n            if (navbar) {\n                let button = _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(navbar, '.mm-btn_prev')[0];\n                if (button) {\n                    button.innerHTML = _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_text(this.i18n(configs.text.closeSubmenu));\n                }\n            }\n        });\n        //\tAdd text to the next-buttons.\n        this.bind('initListview:after', (panel) => {\n            let parent = panel['mmParent'];\n            if (parent) {\n                let next = _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(parent, '.mm-btn_next')[0];\n                if (next) {\n                    let text = this.i18n(configs.text[next.parentElement.matches('.mm-listitem_vertical') ? 'toggleSubmenu' : 'openSubmenu']);\n                    next.innerHTML += _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_text(text);\n                }\n            }\n        });\n    }\n});\n;\n//\tMethods\n(function () {\n    var attr = function (element, attr, value) {\n        element[attr] = value;\n        if (value) {\n            element.setAttribute(attr, value.toString());\n        }\n        else {\n            element.removeAttribute(attr);\n        }\n    };\n    /**\n     * Add aria (property and) attribute to a HTML element.\n     *\n     * @param {HTMLElement} \telement\tThe node to add the attribute to.\n     * @param {string}\t\t\tname\tThe (non-aria-prefixed) attribute name.\n     * @param {string|boolean}\tvalue\tThe attribute value.\n     */\n    _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_aria = function (element, name, value) {\n        attr(element, 'aria-' + name, value);\n    };\n    /**\n     * Add role attribute to a HTML element.\n     *\n     * @param {HTMLElement}\t\telement\tThe node to add the attribute to.\n     * @param {string|boolean}\tvalue\tThe attribute value.\n     */\n    _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_role = function (element, value) {\n        attr(element, 'role', value);\n    };\n    /**\n     * Wrap a text in a screen-reader-only node.\n     *\n     * @param \t{string} text\tThe text to wrap.\n     * @return\t{string}\t\tThe wrapped text.\n     */\n    _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sr_text = function (text) {\n        return '<span class=\"mm-sronly\">' + text + '</span>';\n    };\n})();\n\n\n//# sourceURL=webpack:///./test/core/screenreader/mmenu.screenreader.js?");

/***/ }),

/***/ "./test/core/scrollbugfix/_options.js":
/*!********************************************!*\
  !*** ./test/core/scrollbugfix/_options.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst options = {\n    fix: true\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (options);\n\n\n//# sourceURL=webpack:///./test/core/scrollbugfix/_options.js?");

/***/ }),

/***/ "./test/core/scrollbugfix/mmenu.scrollbugfix.js":
/*!******************************************************!*\
  !*** ./test/core/scrollbugfix/mmenu.scrollbugfix.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_options */ \"./test/core/scrollbugfix/_options.js\");\n\n\n_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.scrollBugFix = _options__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    //\tThe scrollBugFix add-on fixes a scrolling bug\n    //\t\t1) on touch devices\n    //\t\t2) in an off-canvas menu \n    //\t\t3) that -when opened- blocks the UI from interaction \n    if (!_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].support.touch || // 1\n        !this.opts.offCanvas || // 2\n        !this.opts.offCanvas.blockUI // 3\n    ) {\n        return;\n    }\n    var options = this.opts.scrollBugFix;\n    //\tExtend shorthand options\n    if (typeof options == 'boolean') {\n        options = {\n            fix: options\n        };\n    }\n    if (typeof options != 'object') {\n        options = {};\n    }\n    //\tExtend shorthand options\n    this.opts.scrollBugFix = _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].extend(options, _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].options.scrollBugFix);\n    if (!options.fix) {\n        return;\n    }\n    //\tWhen opening the menu, scroll to the top of the current opened panel.\n    this.bind('open:start', () => {\n        _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.pnls, '.mm-panel_opened')[0].scrollTop = 0;\n    });\n    this.bind('initMenu:after', () => {\n        //\tOnly needs to be done once per page.\n        if (!this.vars.scrollBugFixed) {\n            let scrolling = false;\n            //\tPrevent the body from scrolling.\n            document.addEventListener('touchmove', (evnt) => {\n                if (document.documentElement.matches('.mm-wrapper_opened')) {\n                    evnt.preventDefault();\n                }\n            });\n            document.body.addEventListener('touchstart', (evnt) => {\n                var panel = evnt.target;\n                if (!panel.matches('.mm-panels > .mm-panel')) {\n                    return;\n                }\n                if (document.documentElement.matches('.mm-wrapper_opened')) {\n                    if (!scrolling) {\n                        //\tSince we're potentially scrolling the panel in the onScroll event, \n                        //\tthis little hack prevents an infinite loop.\n                        scrolling = true;\n                        if (panel.scrollTop === 0) {\n                            panel.scrollTop = 1;\n                        }\n                        else if (panel.scrollHeight === panel.scrollTop + panel.offsetHeight) {\n                            panel.scrollTop -= 1;\n                        }\n                        //\tEnd of infinite loop preventing hack.\n                        scrolling = false;\n                    }\n                }\n            });\n            document.body.addEventListener('touchmove', (evnt) => {\n                var panel = evnt.target;\n                if (!panel.matches('.mm-panels > .mm-panel')) {\n                    return;\n                }\n                if (document.documentElement.matches('.mm-wrapper_opened')) {\n                    if (panel.scrollHeight > panel.clientHeight) {\n                        evnt.stopPropagation();\n                    }\n                }\n            });\n        }\n        this.vars.scrollBugFixed = true;\n        //\tFix issue after device rotation change.\n        window.addEventListener('orientationchange', (evnt) => {\n            var panel = _oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.pnls, '.mm-panel_opened')[0];\n            panel.scrollTop = 0;\n            //\tApparently, changing the overflow-scrolling property triggers some event :)\n            panel.style['-webkit-overflow-scrolling'] = 'auto';\n            panel.style['-webkit-overflow-scrolling'] = 'touch';\n        });\n    });\n});\n;\n\n\n//# sourceURL=webpack:///./test/core/scrollbugfix/mmenu.scrollbugfix.js?");

/***/ }),

/***/ "./test/mmenu.module.js":
/*!******************************!*\
  !*** ./test/mmenu.module.js ***!
  \******************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n/* harmony import */ var _core_offcanvas_mmenu_offcanvas__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core/offcanvas/mmenu.offcanvas */ \"./test/core/offcanvas/mmenu.offcanvas.js\");\n/* harmony import */ var _core_screenreader_mmenu_screenreader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./core/screenreader/mmenu.screenreader */ \"./test/core/screenreader/mmenu.screenreader.js\");\n/* harmony import */ var _core_scrollbugfix_mmenu_scrollbugfix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core/scrollbugfix/mmenu.scrollbugfix */ \"./test/core/scrollbugfix/mmenu.scrollbugfix.js\");\n/* harmony import */ var _addons_autoheight_mmenu_autoheight__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./addons/autoheight/mmenu.autoheight */ \"./test/addons/autoheight/mmenu.autoheight.js\");\n/* harmony import */ var _addons_backbutton_mmenu_backbutton__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./addons/backbutton/mmenu.backbutton */ \"./test/addons/backbutton/mmenu.backbutton.js\");\n/* harmony import */ var _addons_columns_mmenu_columns__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./addons/columns/mmenu.columns */ \"./test/addons/columns/mmenu.columns.js\");\n/* harmony import */ var _addons_counters_mmenu_counters__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./addons/counters/mmenu.counters */ \"./test/addons/counters/mmenu.counters.js\");\n/* harmony import */ var _addons_dividers_mmenu_dividers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./addons/dividers/mmenu.dividers */ \"./test/addons/dividers/mmenu.dividers.js\");\n/* harmony import */ var _addons_drag_mmenu_drag__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./addons/drag/mmenu.drag */ \"./test/addons/drag/mmenu.drag.js\");\n/* harmony import */ var _addons_dropdown_mmenu_dropdown__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./addons/dropdown/mmenu.dropdown */ \"./test/addons/dropdown/mmenu.dropdown.js\");\n/* harmony import */ var _addons_fixedelements_mmenu_fixedelements__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./addons/fixedelements/mmenu.fixedelements */ \"./test/addons/fixedelements/mmenu.fixedelements.js\");\n/* harmony import */ var _addons_iconbar_mmenu_iconbar__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./addons/iconbar/mmenu.iconbar */ \"./test/addons/iconbar/mmenu.iconbar.js\");\n/* harmony import */ var _addons_iconpanels_mmenu_iconpanels__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./addons/iconpanels/mmenu.iconpanels */ \"./test/addons/iconpanels/mmenu.iconpanels.js\");\n/* harmony import */ var _addons_keyboardnavigation_mmenu_keyboardnavigation__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./addons/keyboardnavigation/mmenu.keyboardnavigation */ \"./test/addons/keyboardnavigation/mmenu.keyboardnavigation.js\");\n/* harmony import */ var _addons_lazysubmenus_mmenu_lazysubmenus__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./addons/lazysubmenus/mmenu.lazysubmenus */ \"./test/addons/lazysubmenus/mmenu.lazysubmenus.js\");\n/* harmony import */ var _addons_navbars_mmenu_navbars__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./addons/navbars/mmenu.navbars */ \"./test/addons/navbars/mmenu.navbars.js\");\n/* harmony import */ var _addons_pagescroll_mmenu_pagescroll__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./addons/pagescroll/mmenu.pagescroll */ \"./test/addons/pagescroll/mmenu.pagescroll.js\");\n/* harmony import */ var _addons_searchfield_mmenu_searchfield__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./addons/searchfield/mmenu.searchfield */ \"./test/addons/searchfield/mmenu.searchfield.js\");\n/* harmony import */ var _addons_sectionindexer_mmenu_sectionindexer__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./addons/sectionindexer/mmenu.sectionindexer */ \"./test/addons/sectionindexer/mmenu.sectionindexer.js\");\n/* harmony import */ var _addons_setselected_mmenu_setselected__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./addons/setselected/mmenu.setselected */ \"./test/addons/setselected/mmenu.setselected.js\");\n/* harmony import */ var _addons_sidebar_mmenu_sidebar__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./addons/sidebar/mmenu.sidebar */ \"./test/addons/sidebar/mmenu.sidebar.js\");\n/* harmony import */ var _addons_toggles_mmenu_toggles__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./addons/toggles/mmenu.toggles */ \"./test/addons/toggles/mmenu.toggles.js\");\n/* harmony import */ var _wrappers_angular_mmenu_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./wrappers/angular/mmenu.angular */ \"./test/wrappers/angular/mmenu.angular.js\");\n/* harmony import */ var _wrappers_bootstrap_mmenu_bootstrap4__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./wrappers/bootstrap/mmenu.bootstrap4 */ \"./test/wrappers/bootstrap/mmenu.bootstrap4.js\");\n/* harmony import */ var _wrappers_olark_mmenu_olark__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./wrappers/olark/mmenu.olark */ \"./test/wrappers/olark/mmenu.olark.js\");\n/* harmony import */ var _wrappers_turbolinks_mmenu_turbolinks__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./wrappers/turbolinks/mmenu.turbolinks */ \"./test/wrappers/turbolinks/mmenu.turbolinks.js\");\n/* harmony import */ var _wrappers_wordpress_mmenu_wordpress__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./wrappers/wordpress/mmenu.wordpress */ \"./test/wrappers/wordpress/mmenu.wordpress.js\");\n//\tCore\n\n//\tCore add-ons\n\n\n\n//\tAdd-ons\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//\tWrappers\n\n\n\n\n\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addons = {\n    //\tCore add-ons\n    offcanvas: _core_offcanvas_mmenu_offcanvas__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    screenReader: _core_screenreader_mmenu_screenreader__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    scrollBugFix: _core_scrollbugfix_mmenu_scrollbugfix__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    //\tAdd-ons\n    autoHeight: _addons_autoheight_mmenu_autoheight__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n    backButton: _addons_backbutton_mmenu_backbutton__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n    columns: _addons_columns_mmenu_columns__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n    counters: _addons_counters_mmenu_counters__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n    dividers: _addons_dividers_mmenu_dividers__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\n    drag: _addons_drag_mmenu_drag__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\n    dropdown: _addons_dropdown_mmenu_dropdown__WEBPACK_IMPORTED_MODULE_10__[\"default\"],\n    fixedElements: _addons_fixedelements_mmenu_fixedelements__WEBPACK_IMPORTED_MODULE_11__[\"default\"],\n    iconbar: _addons_iconbar_mmenu_iconbar__WEBPACK_IMPORTED_MODULE_12__[\"default\"],\n    iconPanels: _addons_iconpanels_mmenu_iconpanels__WEBPACK_IMPORTED_MODULE_13__[\"default\"],\n    keyboardNavigation: _addons_keyboardnavigation_mmenu_keyboardnavigation__WEBPACK_IMPORTED_MODULE_14__[\"default\"],\n    lazySubmenus: _addons_lazysubmenus_mmenu_lazysubmenus__WEBPACK_IMPORTED_MODULE_15__[\"default\"],\n    navbars: _addons_navbars_mmenu_navbars__WEBPACK_IMPORTED_MODULE_16__[\"default\"],\n    pageScroll: _addons_pagescroll_mmenu_pagescroll__WEBPACK_IMPORTED_MODULE_17__[\"default\"],\n    searchfield: _addons_searchfield_mmenu_searchfield__WEBPACK_IMPORTED_MODULE_18__[\"default\"],\n    sectionIndexer: _addons_sectionindexer_mmenu_sectionindexer__WEBPACK_IMPORTED_MODULE_19__[\"default\"],\n    setSelected: _addons_setselected_mmenu_setselected__WEBPACK_IMPORTED_MODULE_20__[\"default\"],\n    sidebar: _addons_sidebar_mmenu_sidebar__WEBPACK_IMPORTED_MODULE_21__[\"default\"],\n    toggles: _addons_toggles_mmenu_toggles__WEBPACK_IMPORTED_MODULE_22__[\"default\"]\n};\n//\tWrappers\n_core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].wrappers = {\n    angular: _wrappers_angular_mmenu_angular__WEBPACK_IMPORTED_MODULE_23__[\"default\"],\n    bootstrap: _wrappers_bootstrap_mmenu_bootstrap4__WEBPACK_IMPORTED_MODULE_24__[\"default\"],\n    olark: _wrappers_olark_mmenu_olark__WEBPACK_IMPORTED_MODULE_25__[\"default\"],\n    turbolinks: _wrappers_turbolinks_mmenu_turbolinks__WEBPACK_IMPORTED_MODULE_26__[\"default\"],\n    wordpress: _wrappers_wordpress_mmenu_wordpress__WEBPACK_IMPORTED_MODULE_27__[\"default\"]\n};\n//\tGlobal namespace\nwindow['Mmenu'] = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n//\tjQuery plugin\n(function ($) {\n    if ($) {\n        $.fn['mmenu'] = function (options, configs) {\n            var $result = $();\n            this.each((e, element) => {\n                //\tDon't proceed if the element already is a mmenu.\n                if (element['mmenu']) {\n                    return;\n                }\n                let menu = new _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"](element, options, configs), $menu = $(menu.node.menu);\n                //\tStore the API.\n                $menu.data('mmenu', menu.API);\n                $result = $result.add($menu);\n            });\n            return $result;\n        };\n    }\n})(window['jQuery'] || window['Zepto'] || null);\n\n\n//# sourceURL=webpack:///./test/mmenu.module.js?");

/***/ }),

/***/ "./test/wrappers/angular/mmenu.angular.js":
/*!************************************************!*\
  !*** ./test/wrappers/angular/mmenu.angular.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    this.opts.onClick = {\n        close: true,\n        preventDefault: false,\n        setSelected: true\n    };\n});\n;\n\n\n//# sourceURL=webpack:///./test/wrappers/angular/mmenu.angular.js?");

/***/ }),

/***/ "./test/wrappers/bootstrap/mmenu.bootstrap4.js":
/*!*****************************************************!*\
  !*** ./test/wrappers/bootstrap/mmenu.bootstrap4.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/oncanvas/mmenu.oncanvas */ \"./test/core/oncanvas/mmenu.oncanvas.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    //\tCreate the menu\n    if (this.node.menu.matches('.navbar-collapse')) {\n        //\tNo need for cloning the menu...\n        this.conf.clone = false;\n        //\t... We'll create a new menu\n        var nav = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('nav'), panel = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('div');\n        nav.append(panel);\n        _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(this.node.menu)\n            .forEach((child) => {\n            switch (true) {\n                case child.matches('.navbar-nav'):\n                    panel.append(cloneNav(child));\n                    break;\n                case child.matches('.dropdown-menu'):\n                    panel.append(cloneDropdown(child));\n                    break;\n                case child.matches('.form-inline'):\n                    this.conf.searchfield.form = {\n                        action: child.getAttribute('action') || null,\n                        method: child.getAttribute('method') || null\n                    };\n                    this.conf.searchfield.input = {\n                        name: child.querySelector('input').getAttribute('name') || null\n                    };\n                    this.conf.searchfield.clear = false;\n                    this.conf.searchfield.submit = true;\n                    break;\n                default:\n                    panel.append(child.cloneNode(true));\n                    break;\n            }\n        });\n        //\tSet the menu\n        this.bind('initMenu:before', () => {\n            document.body.prepend(nav);\n            this.node.menu = nav;\n        });\n        //\tHijack the toggler.\n        var toggler = this.node.menu.parentElement.querySelector('.navbar-toggler');\n        toggler.removeAttribute('data-target');\n        toggler.removeAttribute('aria-controls');\n        //\tRemove all bound events.\n        toggler.outerHTML = toggler.outerHTML;\n        toggler.addEventListener('click', (evnt) => {\n            evnt.preventDefault();\n            evnt.stopImmediatePropagation();\n            this[this.vars.opened ? 'close' : 'open']();\n        });\n    }\n    function cloneLink(anchor) {\n        var link = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create(anchor.matches('a') ? 'a' : 'span');\n        //\tCopy attributes\n        var attr = ['href', 'title', 'target'];\n        for (var a = 0; a < attr.length; a++) {\n            if (typeof anchor.getAttribute(attr[a]) != 'undefined') {\n                link.setAttribute(attr[a], anchor.getAttribute(attr[a]));\n            }\n        }\n        //\tCopy contents\n        link.innerHTML = anchor.innerHTML;\n        //\tRemove Screen reader text.\n        _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(link, '.sr-only')\n            .forEach((sro) => {\n            sro.remove();\n        });\n        return link;\n    }\n    function cloneDropdown(dropdown) {\n        var list = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('ul');\n        _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(dropdown)\n            .forEach((anchor) => {\n            var item = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('li');\n            if (anchor.matches('.dropdown-divider')) {\n                item.classList.add('Divider');\n            }\n            else if (anchor.matches('.dropdown-item')) {\n                item.append(cloneLink(anchor));\n            }\n            list.append(item);\n        });\n        return list;\n    }\n    function cloneNav(nav) {\n        var list = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('ul');\n        _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.find(nav, '.nav-item')\n            .forEach((anchor) => {\n            var item = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.create('li');\n            if (anchor.matches('.active')) {\n                item.classList.add('Selected');\n            }\n            if (!anchor.matches('.nav-link')) {\n                let dropdown = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(anchor, '.dropdown-menu')[0];\n                if (dropdown) {\n                    item.append(cloneDropdown(dropdown));\n                }\n                anchor = _core_oncanvas_mmenu_oncanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DOM.children(anchor, '.nav-link')[0];\n            }\n            item.prepend(cloneLink(anchor));\n            list.append(item);\n        });\n        return list;\n    }\n});\n;\n\n\n//# sourceURL=webpack:///./test/wrappers/bootstrap/mmenu.bootstrap4.js?");

/***/ }),

/***/ "./test/wrappers/olark/mmenu.olark.js":
/*!********************************************!*\
  !*** ./test/wrappers/olark/mmenu.olark.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    this.conf.offCanvas.page.noSelector.push('#olark');\n});\n;\n\n\n//# sourceURL=webpack:///./test/wrappers/olark/mmenu.olark.js?");

/***/ }),

/***/ "./test/wrappers/turbolinks/mmenu.turbolinks.js":
/*!******************************************************!*\
  !*** ./test/wrappers/turbolinks/mmenu.turbolinks.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    var classnames;\n    const grep = function (items, callback) {\n        var filtered = [];\n        for (var i = 0; i < items.length; i++) {\n            let item = items[i];\n            if (callback(item)) {\n                filtered.push(item);\n            }\n        }\n        return filtered;\n    };\n    document.addEventListener('turbolinks:before-visit', (evnt) => {\n        classnames = document.documentElement.className;\n        classnames = grep(classnames.split(' '), (name) => {\n            return !/mm-/.test(name);\n        }).join(' ');\n    });\n    document.addEventListener('turbolinks:load', (evnt) => {\n        if (typeof classnames === 'undefined') {\n            return;\n        }\n        document.documentElement.className = classnames;\n    });\n});\n;\n\n\n//# sourceURL=webpack:///./test/wrappers/turbolinks/mmenu.turbolinks.js?");

/***/ }),

/***/ "./test/wrappers/wordpress/mmenu.wordpress.js":
/*!****************************************************!*\
  !*** ./test/wrappers/wordpress/mmenu.wordpress.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n    this.conf.classNames.selected = 'current-menu-item';\n    var wpadminbar = document.getElementById('wpadminbar');\n    wpadminbar.style.position = 'fixed';\n    wpadminbar.classList.add('mm-slideout');\n});\n;\n\n\n//# sourceURL=webpack:///./test/wrappers/wordpress/mmenu.wordpress.js?");

/***/ })

/******/ });